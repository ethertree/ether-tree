{"version":3,"sources":["contracts sync /^/.//.*/.address/.js$","contracts/Arboretum.address.js","contracts/YourContract.address.js","contracts/Arboretum.abi.js","contracts/YourContract.abi.js","contracts/Arboretum.bytecode.js","contracts/YourContract.bytecode.js","contracts/contracts.js","tree sync /^/.//.*/.png$","tree/0/0.png","tree/0/1.png","tree/0/2.png","tree/0/3.png","tree/0/4.png","tree/0/5.png","tree/0/6.png","tree/0/7.png","tree/1/0.png","tree/1/1.png","tree/1/2.png","tree/1/3.png","tree/1/4.png","tree/1/5.png","tree/1/6.png","tree/1/7.png","tree/2/0.png","tree/2/1.png","tree/2/2.png","tree/2/3.png","tree/2/4.png","tree/2/5.png","tree/2/6.png","tree/2/7.png","tree/3/0.png","tree/3/1.png","tree/3/2.png","tree/3/3.png","tree/3/4.png","tree/3/5.png","tree/3/6.png","tree/3/7.png","tree/4/0.png","tree/4/1.png","tree/4/2.png","tree/4/3.png","tree/4/4.png","tree/4/5.png","tree/4/6.png","tree/4/7.png","hooks/ContractLoader.js","constants.js","hooks/UserProvider.js","hooks/Poller.js","hooks/ContractReader.js","hooks/Balance.js","hooks/LookupAddress.js","hooks/LocalStorage.js","components/Address.jsx","components/Balance.jsx","helpers/Transactor.js","components/Blockie.jsx","components/AddressInput.jsx","components/EtherInput.jsx","components/Wallet.jsx","components/Account.jsx","components/Contract/utils.js","components/Contract/FunctionForm.jsx","components/Timeline.jsx","components/TreeContent.jsx","views/Hints.jsx","views/ExampleUI.jsx","views/Subgraph.jsx","views/PlantTree.jsx","views/Trees.jsx","views/About.jsx","views/HowTo.jsx","views/MyTree.jsx","App.jsx","hooks/ExchangePrice.js","hooks/GasPrice.js","index.jsx","tree/EtherTree.png","contracts sync /^/.//.*/.abi/.js$","contracts sync /^/.//.*/.bytecode/.js$"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","loadContract","contractName","signer","newContract","Contract","require","bytecode","console","log","useContractLoader","providerOrSigner","useState","contracts","setContracts","useEffect","a","listAccounts","accounts","length","getSigner","contractList","newContracts","reduce","accumulator","loadContracts","INFURA_ID","useUserProvider","injectedProvider","localProvider","useMemo","burnerConfig","window","location","pathname","indexOf","rawPK","incomingPK","hash","replace","privateKey","history","pushState","currentPrivateKey","localStorage","getItem","setItem","Date","now","connection","url","rpcUrl","Web3Provider","BurnerProvider","networkName","_network","name","usePoller","fn","delay","extraWatch","savedCallback","useRef","current","setInterval","clearInterval","useContractReader","functionName","args","pollTime","formatter","onChange","adjustPollTime","value","setValue","setTimeout","bind","newValue","useBalance","provider","address","balance","setBalance","getBalance","newBalance","lookupAddress","reportedName","resolveName","resolvedAddress","getAddress","useLookupAddress","ensName","setEnsName","key","initialValue","item","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","stringify","useLocalStorage","ensCache","setEnsCache","timestamp","then","Text","Typography","Address","props","ens","ensProvider","avatar","paragraph","rows","displayAddress","substr","size","blockExplorer","text","etherscanLink","minimized","style","verticalAlign","color","target","href","rel","seed","toLowerCase","scale","editable","copyable","className","fontSize","paddingLeft","Balance","dollarMode","setDollarMode","floatBalance","parseFloat","usingBalance","etherBalance","formatEther","toFixed","displayBalance","dollarMultiplier","padding","cursor","onClick","Transactor","gasPrice","etherscan","tx","getNetwork","network","options","dappId","system","networkId","chainId","transactionHandler","txInformation","notify","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","parseUnits","gasLimit","hexlify","sendTransaction","emitter","on","transaction","onclick","open","notification","info","message","description","placement","Blockie","AddressInput","scan","setScan","currentValue","scannerButton","marginTop","count","CameraOutlined","QrcodeOutlined","updateAddress","useCallback","possibleAddress","scanner","zIndex","position","left","top","width","resolution","onError","onScan","possibleNewValue","lastIndexOf","autoComplete","autoFocus","placeholder","prefix","addonAfter","EtherInput","price","mode","setMode","display","setDisplay","option","title","usdValue","ethValue","Paragraph","Wallet","receiveButton","privateKeyButton","signerAddress","useUserAddress","selectedAddress","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","providerSend","WalletOutlined","rotate","level","includeMargin","renderAs","imageSettings","excavate","KeyOutlined","wallet","ethers","extraPkDisplayAdded","extraPkDisplay","push","backgroundStyle","pastpk","pastwallet","createRandom","_signingKey","reload","inputStyle","visible","float","paddingRight","onOk","onCancel","footer","type","disabled","loading","parseEther","to","SendOutlined","Account","userProvider","mainnetProvider","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","modalButtons","cachedProvider","marginLeft","shape","tryToDisplay","thing","toNumber","formatUnits","utils","TreeContent","Card","Meta","date","startDate","duration","treeDetails","readContracts","getStateDate","UNIXimestamp","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","bountyPool","hoverable","marginBottom","cover","alt","src","planted","Math","floor","treeDuration","whichTree","fee","paymentFrequency","paymentSize","getTime","writeContracts","Arboretum","water","redeem","Hints","yourLocalBalance","margin","marginRight","backgroundColor","borderRadius","fontWeight","ExampleUI","purpose","setPurposeEvents","newPurpose","setNewPurpose","border","plant","YourContract","setPurpose","data","interface","encodeFunctionData","paddingBottom","bordered","dataSource","renderItem","Item","blockNumber","sender","SyncOutlined","spin","range","defaultValue","defaultChecked","percent","status","highlight","Subgraph","EXAMPLE_GRAPHQL","EXAMPLE_GQL","gql","useQuery","pollInterval","purposeColumns","dataIndex","render","record","d","toISOString","deployWarning","textAlign","purposes","columns","rowKey","height","fetcher","graphQLParams","fetch","subgraphUri","method","headers","body","response","json","docExplorerOpen","query","PlantTree","treeCount","setNewFrequency","setNewPaymentSize","setNewLapseLimit","setNewDuration","setNewMinWaterers","setNewBounty","Option","Select","tailLayout","wrapperCol","offset","span","Form","useForm","form","labelCol","onFinish","values","plantTreeVal","bounty","getDurationInSeconds","fee_amount","frequency","laple_limit","minwaters","payment_size","start_date","startOf","unix","label","allowClear","format","disabledDate","moment","endOf","direction","htmlType","Trees","treePlantedEvents","gutter","Array","i","mainnetProvide","About","HowTo","MyTree","JsonRpcProvider","hostname","process","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","clearCachedProvider","App","setInjectedProvider","setPrice","DAI","Token","Fetcher","fetchPairData","WETH","pair","route","Route","midPrice","toSignificant","getPrice","useExchangePrice","speed","setGasPrice","loadGasPrice","axios","get","newGasPrice","catch","useGasPrice","faucetTx","yourMainnetBalance","connect","setRoute","faucetHint","faucetClicked","setFaucetClicked","selectedKeys","treeImg","exact","path","right","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5a6e417b.chunk.js","sourcesContent":["var map = {\n\t\"./Arboretum.address.js\": 1156,\n\t\"./YourContract.address.js\": 1157\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1155;","module.exports = \"0x1d72F6d89DFEcfe7741d8B2AE5a0DCacDac5A1B7\";","module.exports = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";","module.exports = [\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"_id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"_redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"_etherAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"FruitRedeemed\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"_id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"_waterer\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"JoinTree\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"_id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"_startDate\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"_endDate\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"_bounty\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"_feeAmt\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"_paymentSize\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"_paymentFrequency\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"_lapseLimit\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"_minWaterers\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"TreePlanted\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"_id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"_waterer\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"TreeWatered\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"feeAmount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getTimeLeft\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getTimeLeftToStart\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isTree\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"lapsePercent\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_waterer\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"logJoin\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_etherAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"logRedeem\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_waterer\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"logWater\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"duration\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"freq\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"payment_size\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"lapse_limit\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"fee_amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"start_date\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"min_waterers\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"plant\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"user\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"statsForTree\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"treeCount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"treeInfo\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"id\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"bountyPool\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"treeDuration\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"paymentFrequency\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"paymentSize\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"lapseLimit\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"fee\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"startDate\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"waterersNeeded\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"planted\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"address payable\",\n            \"name\": \"planter\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"fundsRaised\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"finishedCount\",\n            \"type\": \"uint256\"\n          }\n        ],\n        \"internalType\": \"struct TreeInfo\",\n        \"name\": \"\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"trees\",\n    \"outputs\": [\n      {\n        \"internalType\": \"contract Tree\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"water\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  }\n];","module.exports = [\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"purpose\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"SetPurpose\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"counter\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"dec\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"purpose\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"newPurpose\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"setPurpose\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];","module.exports = \"0x608060405234801561001057600080fd5b506137cd806100206000396000f3fe608060405260043610620000fe5760003560e01c8063bd6248161162000097578063e2541a761162000061578063e2541a7614620002d6578063e8c5876314620002fb578063ea1b376c1462000320578063fea3b6c3146200034557620000fe565b8063bd6248161462000222578063d04ecac81462000247578063d31db429146200027d578063db006a7514620002b157620000fe565b8063805032d011620000d9578063805032d0146200019b578063a7eec44b14620001cf578063b25fd8fb14620001e6578063bc1f2e3514620001fd57620000fe565b80633647da4414620001035780636c852657146200012a5780637a5080221462000167575b600080fd5b3480156200011057600080fd5b50620001286200012236600462001a08565b6200035d565b005b3480156200013757600080fd5b506200014f62000149366004620019a4565b620003c1565b6040516200015e919062001d4f565b60405180910390f35b3480156200017457600080fd5b506200018c62000186366004620019a4565b62000572565b6040516200015e919062001ac9565b348015620001a857600080fd5b50620001c0620001ba366004620019a4565b6200058d565b6040516200015e919062001cb0565b62000128620001e0366004620019a4565b62000c39565b62000128620001f736600462001a70565b62000e8f565b3480156200020a57600080fd5b50620001286200021c366004620019d6565b62000fb3565b3480156200022f57600080fd5b506200012862000241366004620019d6565b62001014565b3480156200025457600080fd5b506200026c62000266366004620019d6565b62001069565b6040516200015e9392919062001d8e565b3480156200028a57600080fd5b50620002a26200029c36600462001966565b6200111f565b6040516200015e919062001add565b348015620002be57600080fd5b5062000128620002d0366004620019a4565b62001134565b348015620002e357600080fd5b506200014f620002f5366004620019a4565b620012bc565b3480156200030857600080fd5b506200014f6200031a366004620019a4565b620013fd565b3480156200032d57600080fd5b506200014f6200033f366004620019a4565b62001660565b3480156200035257600080fd5b506200014f62001744565b3360009081526002602052604090205460ff1615156001146200037f57600080fd5b7fddec011799aff5ea7e0914202274c45978a534edccdc1a69d4188f20534f4448838383604051620003b49392919062001d6f565b60405180910390a1505050565b600080548210620003d157600080fd5b60008281526001602090815260409182902054825163ddca3f4360e01b815292516001600160a01b03909116926200056b92849263ddca3f43926004808201939291829003018186803b1580156200042857600080fd5b505afa1580156200043d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004639190620019bd565b6200055e836001600160a01b03166308637d206040518163ffffffff1660e01b815260040160206040518083038186803b158015620004a157600080fd5b505afa158015620004b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004dc9190620019bd565b846001600160a01b0316636681b9fd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200051657600080fd5b505afa1580156200052b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005519190620019bd565b9063ffffffff6200174a16565b9063ffffffff6200179716565b9392505050565b6001602052600090815260409020546001600160a01b031681565b62000597620018e7565b620005a1620018e7565b60008381526001602090815260409182902054825163af640d0f60e01b815292516001600160a01b0390911692839263af640d0f92600480840193829003018186803b158015620005f157600080fd5b505afa15801562000606573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200062c9190620019bd565b826000018181525050806001600160a01b03166308637d206040518163ffffffff1660e01b815260040160206040518083038186803b1580156200066f57600080fd5b505afa15801562000684573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006aa9190620019bd565b826020018181525050806001600160a01b031663f179d4766040518163ffffffff1660e01b815260040160206040518083038186803b158015620006ed57600080fd5b505afa15801562000702573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007289190620019bd565b826040018181525050806001600160a01b0316638e5893156040518163ffffffff1660e01b815260040160206040518083038186803b1580156200076b57600080fd5b505afa15801562000780573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007a69190620019bd565b826060018181525050806001600160a01b031663fda4160c6040518163ffffffff1660e01b815260040160206040518083038186803b158015620007e957600080fd5b505afa158015620007fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008249190620019bd565b826080018181525050806001600160a01b0316634ffee25d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200086757600080fd5b505afa1580156200087c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a29190620019bd565b8260a0018181525050806001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b158015620008e557600080fd5b505afa158015620008fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009209190620019bd565b8260c0018181525050806001600160a01b0316630b97bc866040518163ffffffff1660e01b815260040160206040518083038186803b1580156200096357600080fd5b505afa15801562000978573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200099e9190620019bd565b8260e0018181525050806001600160a01b031663a2181c396040518163ffffffff1660e01b815260040160206040518083038186803b158015620009e157600080fd5b505afa158015620009f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a1c9190620019bd565b82610100018181525050806001600160a01b03166383310b2f6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000a6057600080fd5b505afa15801562000a75573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a9b919062001985565b8261014001906001600160a01b031690816001600160a01b031681525050806001600160a01b0316636681b9fd6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000af357600080fd5b505afa15801562000b08573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b2e9190620019bd565b82610160018181525050806001600160a01b03166356165fc46040518163ffffffff1660e01b815260040160206040518083038186803b15801562000b7257600080fd5b505afa15801562000b87573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bad9190620019bd565b82610180018181525050806001600160a01b0316637351bcbc6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000bf157600080fd5b505afa15801562000c06573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c2c9190620019bd565b6101208301525092915050565b600054811062000c4857600080fd5b6000818152600160209081526040918290205482516383310b2f60e01b815292516001600160a01b0390911692339284926383310b2f926004808201939291829003018186803b15801562000c9c57600080fd5b505afa15801562000cb1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cd7919062001985565b6001600160a01b0316141562000d0a5760405162461bcd60e51b815260040162000d019062001c81565b60405180910390fd5b62000e05816001600160a01b031663f179d4766040518163ffffffff1660e01b815260040160206040518083038186803b15801562000d4857600080fd5b505afa15801562000d5d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d839190620019bd565b826001600160a01b0316630b97bc866040518163ffffffff1660e01b815260040160206040518083038186803b15801562000dbd57600080fd5b505afa15801562000dd2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000df89190620019bd565b9063ffffffff620017d116565b42111562000e275760405162461bcd60e51b815260040162000d019062001c4a565b60405163d18dc34d60e01b81526001600160a01b0382169063d18dc34d90349062000e5790339060040162001ac9565b6000604051808303818588803b15801562000e7157600080fd5b505af115801562000e86573d6000803e3d6000fd5b50505050505050565b42821162000eb15760405162461bcd60e51b815260040162000d019062001bc7565b600034600054898989898989893360405162000ecd9062001958565b62000ee19998979695949392919062001da4565b6040518091039082f090508015801562000eff573d6000803e3d6000fd5b506001600160a01b0381166000818152600260209081526040808320805460ff191660019081179091558354845291829052822080546001600160a01b031916909317909255805491820190559091507fec922971e0dc75c8c2fc49aaaacd5b2b85541bdc1aa24069e39923ffb812f4fb908462000f84818c63ffffffff620017d116565b34888b8d8c8a60405162000fa19998979695949392919062001dec565b60405180910390a15050505050505050565b3360009081526002602052604090205460ff16151560011462000fd557600080fd5b7f44347f280831bcb79f96e4c2753449292624891d5948d367afb0e7352aa9be6b82826040516200100892919062001d58565b60405180910390a15050565b3360009081526002602052604090205460ff1615156001146200103657600080fd5b7fb8735dc3faeafd4c9ecb21c08bd14e82ea78909902dd97507dab887c950945a082826040516200100892919062001d58565b6000806000805485106200107c57600080fd5b600085815260016020526040908190205490516304ee79f360e31b81526001600160a01b03909116908190632773cf9890620010bd90889060040162001ac9565b60606040518083038186803b158015620010d657600080fd5b505afa158015620010eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001111919062001a42565b935093509350509250925092565b60026020526000908152604090205460ff1681565b60005481106200114357600080fd5b6000818152600160209081526040918290205482516378bcea3b60e11b8152925162001222936001600160a01b039092169263f179d4769260048082019391829003018186803b1580156200119757600080fd5b505afa158015620011ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011d29190620019bd565b6000838152600160209081526040918290205482516305cbde4360e11b815292516001600160a01b0390911692630b97bc86926004808301939192829003018186803b15801562000dbd57600080fd5b4211620012435760405162461bcd60e51b815260040162000d019062001b3e565b600081815260016020526040908190205490516395a2251f60e01b81526001600160a01b039091169081906395a2251f906200128490339060040162001ac9565b600060405180830381600087803b1580156200129f57600080fd5b505af1158015620012b4573d6000803e3d6000fd5b505050505050565b600080548210620012cc57600080fd5b600082815260016020908152604091829020548251636968c6ff60e01b815292516001600160a01b0390911692620013f3928492636968c6ff926004808201939291829003018186803b1580156200132357600080fd5b505afa15801562001338573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200135e9190620019bd565b620013e66064846001600160a01b03166356165fc46040518163ffffffff1660e01b815260040160206040518083038186803b1580156200139e57600080fd5b505afa158015620013b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013d99190620019bd565b9063ffffffff620017f916565b9063ffffffff6200183916565b6064039392505050565b6000805482106200140d57600080fd5b6000828152600160209081526040918290205482516378bcea3b60e11b8152925142936001600160a01b0390921692839263f179d4769260048083019392829003018186803b1580156200146057600080fd5b505afa15801562001475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200149b9190620019bd565b816001600160a01b0316630b97bc866040518163ffffffff1660e01b815260040160206040518083038186803b158015620014d557600080fd5b505afa158015620014ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015109190620019bd565b01821180620015925750806001600160a01b0316630b97bc866040518163ffffffff1660e01b815260040160206040518083038186803b1580156200155457600080fd5b505afa15801562001569573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200158f9190620019bd565b82105b62001655576200164f8262000551836001600160a01b031663f179d4766040518163ffffffff1660e01b815260040160206040518083038186803b158015620015da57600080fd5b505afa158015620015ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016159190620019bd565b846001600160a01b0316630b97bc866040518163ffffffff1660e01b815260040160206040518083038186803b15801562000dbd57600080fd5b62001658565b60005b949350505050565b6000805482106200167057600080fd5b6000828152600160209081526040918290205482516305cbde4360e11b8152925142936001600160a01b03909216928392630b97bc869260048083019392829003018186803b158015620016c357600080fd5b505afa158015620016d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016fe9190620019bd565b821162001655576200164f82826001600160a01b0316630b97bc866040518163ffffffff1660e01b815260040160206040518083038186803b1580156200051657600080fd5b60005481565b60006200178e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506200187d565b90505b92915050565b6000670de0b6b3a7640000620017c1620017b28585620017f9565b6706f05b59d3b20000620017d1565b81620017c957fe5b049392505050565b6000828201838110156200178e5760405162461bcd60e51b815260040162000d019062001b90565b6000826200180a5750600062001791565b828202828482816200181857fe5b04146200178e5760405162461bcd60e51b815260040162000d019062001c09565b60006200178e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620018ac565b60008184841115620018a45760405162461bcd60e51b815260040162000d01919062001ae8565b505050900390565b60008183620018d05760405162461bcd60e51b815260040162000d01919062001ae8565b506000838581620018dd57fe5b0495945050505050565b604051806101a001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b6119538062001e4583390190565b60006020828403121562001978578081fd5b81356200178e8162001e2b565b60006020828403121562001997578081fd5b81516200178e8162001e2b565b600060208284031215620019b6578081fd5b5035919050565b600060208284031215620019cf578081fd5b5051919050565b60008060408385031215620019e9578081fd5b823591506020830135620019fd8162001e2b565b809150509250929050565b60008060006060848603121562001a1d578081fd5b83359250602084013562001a318162001e2b565b929592945050506040919091013590565b60008060006060848603121562001a57578283fd5b8351925060208401519150604084015190509250925092565b600080600080600080600060e0888a03121562001a8b578283fd5b505085359760208701359750604087013596606081013596506080810135955060a0810135945060c0013592509050565b6001600160a01b03169052565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b8181101562001b165785810183015185820160400152820162001af8565b8181111562001b285783604083870101525b50601f01601f1916929092016040019392505050565b60208082526032908201527f4d757374207761697420756e74696c207761746572696e6720706572696f642060408201527134b99037bb32b9103a37903932b232b2b69760711b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526022908201527f54726565732063616e206f6e6c792067726f7720696e20746865206675747572604082015261329760f11b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601a908201527f5761746572696e6720706572696f642068617320656e6465642e000000000000604082015260600190565b60208082526015908201527421b0b713ba103bb0ba32b91037bbb7103a3932b29760591b604082015260600190565b60006101a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e08301526101008084015181840152506101208084015181840152506101408084015162001d308285018262001abc565b5050610160838101519083015261018092830151929091019190915290565b90815260200190565b9182526001600160a01b0316602082015260400190565b9283526001600160a01b03919091166020830152604082015260600190565b9283526020830191909152604082015260600190565b988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526001600160a01b03166101008201526101200190565b988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200190565b6001600160a01b038116811462001e4157600080fd5b5056fe60806040819052600080546001600160a01b03191673f8ac10e65f2073460aad5f28e1eabe807dc287cf17905562001953388190039081908339810160408190526200004b91620002d6565b60005460018a9055600d80546001600160a01b0319908116331790915534600281905560038b905560048a90556005899055600688905560078790556008869055600b80546001600160a01b0386811691909416179055600985905542600a55600e549190921691620000ce91906200110b6200025d602090811b91909117901c565b600e819055506000816001600160a01b0316633a21afac6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200011257600080fd5b505af115801562000127573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014d919062000295565b60005460405163095ea7b360e01b81529192506001600160a01b038084169263095ea7b392620001869216906000199060040162000369565b602060405180830381600087803b158015620001a157600080fd5b505af1158015620001b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001dc9190620002b4565b5034156200024c576040516358c22be760e01b81526001600160a01b038316906358c22be7903490620002179030906000906004016200034c565b6000604051808303818588803b1580156200023157600080fd5b505af115801562000246573d6000803e3d6000fd5b50505050505b5050505050505050505050620003d2565b6000828201838110156200028e5760405162461bcd60e51b8152600401620002859062000382565b60405180910390fd5b9392505050565b600060208284031215620002a7578081fd5b81516200028e81620003b9565b600060208284031215620002c6578081fd5b815180151581146200028e578182fd5b60008060008060008060008060006101208a8c031215620002f5578485fd5b8951985060208a0151975060408a0151965060608a0151955060808a0151945060a08a0151935060c08a0151925060e08a015191506101008a01516200033b81620003b9565b809150509295985092959850929598565b6001600160a01b0392909216825261ffff16602082015260400190565b6001600160a01b03929092168252602082015260400190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6001600160a01b0381168114620003cf57600080fd5b50565b61157180620003e26000396000f3fe60806040526004361061011f5760003560e01c80638e589315116100a0578063d18dc34d11610064578063d18dc34d146102b4578063ddca3f43146102c7578063e5b5019a146102dc578063f179d476146102f1578063fda4160c146103065761011f565b80638e5893151461023357806395a2251f14610248578063a2181c391461026a578063a3a5421a1461027f578063af640d0f1461029f5761011f565b80636681b9fd116100e75780636681b9fd146101bd57806369266feb146101d25780636968c6ff146101f45780637351bcbc1461020957806383310b2f1461021e5761011f565b806308637d20146101245780630b97bc861461014f5780632773cf98146101645780634ffee25d1461019357806356165fc4146101a8575b600080fd5b34801561013057600080fd5b5061013961031b565b60405161014691906114d1565b60405180910390f35b34801561015b57600080fd5b50610139610321565b34801561017057600080fd5b5061018461017f3660046111f6565b610327565b60405161014693929190611510565b34801561019f57600080fd5b50610139610348565b3480156101b457600080fd5b5061013961034e565b3480156101c957600080fd5b50610139610354565b3480156101de57600080fd5b506101e761035a565b604051610146919061125e565b34801561020057600080fd5b50610139610369565b34801561021557600080fd5b5061013961036f565b34801561022a57600080fd5b506101e7610375565b34801561023f57600080fd5b50610139610384565b34801561025457600080fd5b506102686102633660046111f6565b61038a565b005b34801561027657600080fd5b50610139610c5f565b34801561028b57600080fd5b506101e761029a36600461122e565b610c65565b3480156102ab57600080fd5b50610139610c8c565b6102686102c23660046111f6565b610c92565b3480156102d357600080fd5b506101396110aa565b3480156102e857600080fd5b506101396110b0565b3480156102fd57600080fd5b506101396110b6565b34801561031257600080fd5b506101396110bc565b60025481565b60085481565b60116020526000908152604090208054600182015460029092015490919083565b60065481565b600f5481565b600e5481565b600d546001600160a01b031681565b600c5490565b600a5481565b600b546001600160a01b031681565b60045481565b600d546001600160a01b031633146103a157600080fd5b600d546000805460408051630e886beb60e21b815290516001600160a01b039485169490921692918391633a21afac91600480830192602092919082900301818787803b1580156103f157600080fd5b505af1158015610405573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104299190611212565b600b549091506001600160a01b038581169116141561081157600954600c5410156105fe57600b546001600160a01b038581169116146104845760405162461bcd60e51b815260040161047b9061139f565b60405180910390fd5b6000600254116104a65760405162461bcd60e51b815260040161047b906112e2565b6040516370a0823160e01b81526000906001600160a01b038316906370a08231906104d590309060040161125e565b60206040518083038186803b1580156104ed57600080fd5b505afa158015610501573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105259190611246565b60006002819055600e55600154604051630d91f69160e21b81529192506001600160a01b03861691633647da449161056391899086906004016114f1565b600060405180830381600087803b15801561057d57600080fd5b505af1158015610591573d6000803e3d6000fd5b5050604051631b08c5a960e11b81526001600160a01b03861692506336118b5291506105c390849089906004016114da565b600060405180830381600087803b1580156105dd57600080fd5b505af11580156105f1573d6000803e3d6000fd5b5050505050505050610c5c565b60015460405163712a0d3b60e11b81526001600160a01b0385169163e2541a769161062c91906004016114d1565b60206040518083038186803b15801561064457600080fd5b505afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c9190611246565b6006541161080c57600254600154604051636c85265760e01b81526000916001600160a01b03871691636c852657916106b7916004016114d1565b60206040518083038186803b1580156106cf57600080fd5b505afa1580156106e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107079190611246565b60006002819055600755600e54909150610727908363ffffffff6110c216565b600e556001546001600160a01b03861690633647da44908861074f868663ffffffff61110b16565b6040518463ffffffff1660e01b815260040161076d939291906114f1565b600060405180830381600087803b15801561078757600080fd5b505af115801561079b573d6000803e3d6000fd5b5050506001600160a01b03851690506336118b526107b9848461110b565b886040518363ffffffff1660e01b81526004016107d79291906114da565b600060405180830381600087803b1580156107f157600080fd5b505af1158015610805573d6000803e3d6000fd5b5050505050505b610c58565b6004546001600160a01b0385166000908152601160205260409020541415610c585760015460405163712a0d3b60e11b81526000916001600160a01b0386169163e2541a7691610863916004016114d1565b60206040518083038186803b15801561087b57600080fd5b505afa15801561088f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b39190611246565b6006541115610a465761094a601054836001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016108ee919061125e565b60206040518083038186803b15801561090657600080fd5b505afa15801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e9190611246565b9063ffffffff61113016565b6001600160a01b03861660009081526011602052604081205560105490915061097a90600163ffffffff6110c216565b601055600154604051630d91f69160e21b81526001600160a01b03861691633647da44916109af9190899086906004016114f1565b600060405180830381600087803b1580156109c957600080fd5b505af11580156109dd573d6000803e3d6000fd5b5050604051631b08c5a960e11b81526001600160a01b03861692506336118b529150610a0f90849089906004016114da565b600060405180830381600087803b158015610a2957600080fd5b505af1158015610a3d573d6000803e3d6000fd5b50505050610c56565b600254600154604051636c85265760e01b81526000916001600160a01b03881691636c85265791610a79916004016114d1565b60206040518083038186803b158015610a9157600080fd5b505afa158015610aa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac99190611246565b90506000610b5d82610b5185886001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610b01919061125e565b60206040518083038186803b158015610b1957600080fd5b505afa158015610b2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b519190611246565b9063ffffffff6110c216565b9050610b746010548261113090919063ffffffff16565b601054909450610b8b90600163ffffffff6110c216565b601055600154604051630d91f69160e21b81526001600160a01b03891691633647da4491610bc091908c9089906004016114f1565b600060405180830381600087803b158015610bda57600080fd5b505af1158015610bee573d6000803e3d6000fd5b5050604051631b08c5a960e11b81526001600160a01b03891692506336118b529150610c209087908c906004016114da565b600060405180830381600087803b158015610c3a57600080fd5b505af1158015610c4e573d6000803e3d6000fd5b505050505050505b505b5050505b50565b60095481565b600c8181548110610c7257fe5b6000918252602090912001546001600160a01b0316905081565b60015481565b600d546001600160a01b03163314610ca957600080fd5b600d546001600160a01b0316610cbd6111d5565b506001600160a01b0380831660009081526011602090815260408083208151606081018352815481526001820154938101939093526002015490820152905460085491921690421015610e4557602082015115610d2c5760405162461bcd60e51b815260040161047b9061149a565b3415610d3757600080fd5b600c805460018101825560009182527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b0319166001600160a01b0387161790558252600454600354610da691610d979190611130565b6008549063ffffffff61110b16565b60208084019182526001600160a01b03808716600090815260119092526040918290208551815592516001808501919091558286015160029094019390935591549051635eb1240b60e11b81529185169163bd62481691610e0b9188906004016114da565b600060405180830381600087803b158015610e2557600080fd5b505af1158015610e39573d6000803e3d6000fd5b50505050505050610c5c565b6008544210158015610e5b5750600954600c5410155b15611092576001600160a01b03841660009081526011602090815260409182902082516060810184528154815260018201549281019290925260020154918101919091526005549092503414610ec35760405162461bcd60e51b815260040161047b906113e0565b81602001514211158015610edb575060008260200151115b610ef75760405162461bcd60e51b815260040161047b90611368565b8160400151421015610f1b5760405162461bcd60e51b815260040161047b90611458565b600e54610f2e903463ffffffff61110b16565b600e556001600160a01b03841660009081526011602090815260409091208054600101815590830151600290910155600454600354610f8891610f77919063ffffffff61113016565b60208401519063ffffffff61110b16565b6001600160a01b0385166000908152601160205260409020600181019190915560045490541415610fc957600f805460019081019091556010805490910190555b6040516358c22be760e01b81526001600160a01b038216906358c22be7903490610ffa903090600090600401611272565b6000604051808303818588803b15801561101357600080fd5b505af1158015611027573d6000803e3d6000fd5b505060015460405163bc1f2e3560e01b81526001600160a01b038816945063bc1f2e35935061105b925088906004016114da565b600060405180830381600087803b15801561107557600080fd5b505af1158015611089573d6000803e3d6000fd5b50505050610c58565b60405162461bcd60e51b815260040161047b90611417565b60075481565b60001981565b60035481565b60055481565b600061110483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611172565b9392505050565b6000828201838110156111045760405162461bcd60e51b815260040161047b90611331565b600061110483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061119e565b600081848411156111965760405162461bcd60e51b815260040161047b919061128f565b505050900390565b600081836111bf5760405162461bcd60e51b815260040161047b919061128f565b5060008385816111cb57fe5b0495945050505050565b60405180606001604052806000815260200160008152602001600081525090565b600060208284031215611207578081fd5b813561110481611526565b600060208284031215611223578081fd5b815161110481611526565b60006020828403121561123f578081fd5b5035919050565b600060208284031215611257578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392909216825261ffff16602082015260400190565b6000602080835283518082850152825b818110156112bb5785810183015185820160400152820161129f565b818111156112cc5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602f908201527f426f756e747920616c72656164792072657475726e656420746f20706c616e7460408201526e6572206f72206e6f20626f756e747960881b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601d908201527f596f75206c61707365642e204e6f20667275697420666f7220796f7521000000604082015260600190565b60208082526021908201527f4d75737420626520706c616e74657220746f2072656465656d20626f756e74796040820152601760f91b606082015260800190565b60208082526019908201527f496e636f7272656374207061796d656e7420616d6f756e742e00000000000000604082015260600190565b60208082526021908201527f4e6f7420656e6f7567682077617465726572732e204279652046656c696369616040820152601760f91b606082015260800190565b60208082526022908201527f5761697420756e74696c20746865206e657874207061796d656e74206379636c604082015261329760f11b606082015260800190565b6020808252601b908201527f43616e206f6e6c79206a6f696e207468652074726565206f6e63650000000000604082015260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9283526001600160a01b03919091166020830152604082015260600190565b9283526020830191909152604082015260600190565b6001600160a01b0381168114610c5c57600080fdfea2646970667358221220a242b740cbebd5bd25a569d65a68ad059af835b35b578445ffac0ce392f1e0ec64736f6c63430006070033a2646970667358221220bbce55790dc34aae0d8f34b3a20f5faf964f11749c3ba3807e78706d0fddd4ed64736f6c63430006070033\";","module.exports = \"0x600160005560e060405260226080818152906106c660a039805161002b9160019160209091019061003e565b5034801561003857600080fd5b506100d9565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061007f57805160ff19168380011785556100ac565b828001600101855582156100ac579182015b828111156100ac578251825591602001919060010190610091565b506100b89291506100bc565b5090565b6100d691905b808211156100b857600081556001016100c2565b90565b6105de806100e86000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806361bc221a1461005157806370740aab1461006b578063b3bcfa82146100e8578063eb68757f146100f2575b600080fd5b610059610198565b60408051918252519081900360200190f35b61007361019e565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100ad578181015183820152602001610095565b50505050905090810190601f1680156100da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100f061022b565b005b6100f06004803603602081101561010857600080fd5b81019060208101813564010000000081111561012357600080fd5b82018360208201111561013557600080fd5b8035906020019184600183028401116401000000008311171561015757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610237945050505050565b60005481565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102235780601f106101f857610100808354040283529160200191610223565b820191906000526020600020905b81548152906001019060200180831161020657829003601f168201915b505050505081565b60008054600019019055565b805161024a90600190602084019061050d565b50604080518082018252600e81526d73657420707572706f736520746f60901b602080830191909152600180548451600282841615610100026000190190921691909104601f8101849004840282018401909552848152610306943394939192918301828280156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b50505050506103c0565b604080513380825260208201838152600180546002600019610100838516150201909116049484018590527f6ea5d6383a120235c7728a9a6751672a8ac068e4ed34dcca2ee444182c1812de94929390929091906060830190849080156103ae5780601f10610383576101008083540402835291602001916103ae565b820191906000526020600020905b81548152906001019060200180831161039157829003601f168201915b5050935050505060405180910390a150565b6104e783838360405160240180846001600160a01b03166001600160a01b031681526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561042257818101518382015260200161040a565b50505050905090810190601f16801561044f5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561048257818101518382015260200161046a565b50505050905090810190601f1680156104af5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663fb77226560e01b17905295506104ec945050505050565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061054e57805160ff191683800117855561057b565b8280016001018555821561057b579182015b8281111561057b578251825591602001919060010190610560565b5061058792915061058b565b5090565b6105a591905b808211156105875760008155600101610591565b9056fea2646970667358221220e6b1089eb75e811209b774e9699e45b7da5ff0094b0391a8e165eccb9fd8be1064736f6c63430006070033f09f9ba02050726f6772616d6d696e6720556e73746f707061626c65204d6f6e6579\";","module.exports = [\"Arboretum\"];","var map = {\n\t\"./0/0.png\": 1247,\n\t\"./0/1.png\": 1248,\n\t\"./0/2.png\": 1249,\n\t\"./0/3.png\": 1250,\n\t\"./0/4.png\": 1251,\n\t\"./0/5.png\": 1252,\n\t\"./0/6.png\": 1253,\n\t\"./0/7.png\": 1254,\n\t\"./1/0.png\": 1255,\n\t\"./1/1.png\": 1256,\n\t\"./1/2.png\": 1257,\n\t\"./1/3.png\": 1258,\n\t\"./1/4.png\": 1259,\n\t\"./1/5.png\": 1260,\n\t\"./1/6.png\": 1261,\n\t\"./1/7.png\": 1262,\n\t\"./2/0.png\": 1263,\n\t\"./2/1.png\": 1264,\n\t\"./2/2.png\": 1265,\n\t\"./2/3.png\": 1266,\n\t\"./2/4.png\": 1267,\n\t\"./2/5.png\": 1268,\n\t\"./2/6.png\": 1269,\n\t\"./2/7.png\": 1270,\n\t\"./3/0.png\": 1271,\n\t\"./3/1.png\": 1272,\n\t\"./3/2.png\": 1273,\n\t\"./3/3.png\": 1274,\n\t\"./3/4.png\": 1275,\n\t\"./3/5.png\": 1276,\n\t\"./3/6.png\": 1277,\n\t\"./3/7.png\": 1278,\n\t\"./4/0.png\": 1279,\n\t\"./4/1.png\": 1280,\n\t\"./4/2.png\": 1281,\n\t\"./4/3.png\": 1282,\n\t\"./4/4.png\": 1283,\n\t\"./4/5.png\": 1284,\n\t\"./4/6.png\": 1285,\n\t\"./4/7.png\": 1286,\n\t\"./EtherTree.png\": 348\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1246;","module.exports = __webpack_public_path__ + \"static/media/0.f4130a75.png\";","module.exports = __webpack_public_path__ + \"static/media/1.d46c1598.png\";","module.exports = __webpack_public_path__ + \"static/media/2.377bff51.png\";","module.exports = __webpack_public_path__ + \"static/media/3.8d0f1914.png\";","module.exports = __webpack_public_path__ + \"static/media/4.817b8d60.png\";","module.exports = __webpack_public_path__ + \"static/media/5.74bf7285.png\";","module.exports = __webpack_public_path__ + \"static/media/6.86231cc7.png\";","module.exports = __webpack_public_path__ + \"static/media/7.28129589.png\";","module.exports = __webpack_public_path__ + \"static/media/0.f4130a75.png\";","module.exports = __webpack_public_path__ + \"static/media/1.d46c1598.png\";","module.exports = __webpack_public_path__ + \"static/media/2.dab1fc66.png\";","module.exports = __webpack_public_path__ + \"static/media/3.2d38dd0e.png\";","module.exports = __webpack_public_path__ + \"static/media/4.cd24342f.png\";","module.exports = __webpack_public_path__ + \"static/media/5.ea1024cb.png\";","module.exports = __webpack_public_path__ + \"static/media/6.160b20b0.png\";","module.exports = __webpack_public_path__ + \"static/media/7.ef79b332.png\";","module.exports = __webpack_public_path__ + \"static/media/0.f4130a75.png\";","module.exports = __webpack_public_path__ + \"static/media/1.d46c1598.png\";","module.exports = __webpack_public_path__ + \"static/media/2.dab1fc66.png\";","module.exports = __webpack_public_path__ + \"static/media/3.2d38dd0e.png\";","module.exports = __webpack_public_path__ + \"static/media/4.1f7d11e0.png\";","module.exports = __webpack_public_path__ + \"static/media/5.14aae8d9.png\";","module.exports = __webpack_public_path__ + \"static/media/6.b8891381.png\";","module.exports = __webpack_public_path__ + \"static/media/7.0b0f32e2.png\";","module.exports = __webpack_public_path__ + \"static/media/0.f4130a75.png\";","module.exports = __webpack_public_path__ + \"static/media/1.d46c1598.png\";","module.exports = __webpack_public_path__ + \"static/media/2.dab1fc66.png\";","module.exports = __webpack_public_path__ + \"static/media/3.2d38dd0e.png\";","module.exports = __webpack_public_path__ + \"static/media/4.cd24342f.png\";","module.exports = __webpack_public_path__ + \"static/media/5.ea1024cb.png\";","module.exports = __webpack_public_path__ + \"static/media/6.160b20b0.png\";","module.exports = __webpack_public_path__ + \"static/media/7.ef79b332.png\";","module.exports = __webpack_public_path__ + \"static/media/0.f4130a75.png\";","module.exports = __webpack_public_path__ + \"static/media/1.d46c1598.png\";","module.exports = __webpack_public_path__ + \"static/media/2.dab1fc66.png\";","module.exports = __webpack_public_path__ + \"static/media/3.2d38dd0e.png\";","module.exports = __webpack_public_path__ + \"static/media/4.1f7d11e0.png\";","module.exports = __webpack_public_path__ + \"static/media/5.14aae8d9.png\";","module.exports = __webpack_public_path__ + \"static/media/6.b8891381.png\";","module.exports = __webpack_public_path__ + \"static/media/7.0b0f32e2.png\";","/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useState, useEffect } from \"react\";\n\nconst loadContract = (contractName, signer) => {\n  const newContract = new Contract(\n    require(`../contracts/${contractName}.address.js`),\n    require(`../contracts/${contractName}.abi.js`),\n    signer,\n  );\n  try {\n    newContract.bytecode = require(`../contracts/${contractName}.bytecode.js`);\n  } catch (e) {\n    console.log(e);\n  }\n  return newContract;\n};\n\nexport default function useContractLoader(providerOrSigner) {\n  const [contracts, setContracts] = useState();\n  useEffect(() => {\n    async function loadContracts() {\n      if (typeof providerOrSigner !== \"undefined\") {\n        try {\n          // we need to check to see if this providerOrSigner has a signer or not\n          let signer;\n          let accounts;\n          if (providerOrSigner && typeof providerOrSigner.listAccounts === \"function\") {\n            accounts = await providerOrSigner.listAccounts();\n          }\n\n          if (accounts && accounts.length > 0) {\n            signer = providerOrSigner.getSigner();\n          } else {\n            signer = providerOrSigner;\n          }\n\n          const contractList = require(\"../contracts/contracts.js\");\n\n          const newContracts = contractList.reduce((accumulator, contractName) => {\n            accumulator[contractName] = loadContract(contractName, signer);\n            return accumulator;\n          }, {});\n          setContracts(newContracts);\n        } catch (e) {\n          console.log(\"ERROR LOADING CONTRACTS!!\", e);\n        }\n      }\n    }\n    loadContracts();\n  }, [providerOrSigner]);\n  return contracts;\n}\n","// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\nexport const INFURA_ID = \"7b7a5abb1551405cb514e818e779e9f9\";\n\n//MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\nexport const ETHERSCAN_KEY = \"PSW8C433Q667DVEX5BCRMGNAH9FSGFZ7Q8\";\n\n\n\n\n// EXTERNAL CONTRACTS\n\nexport const DAI_ADDRESS = \"0x6b175474e89094c44da98b954eedeac495271d0f\"\n\nexport const DAI_ABI = [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\n","import { useMemo } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport BurnerProvider from \"burner-provider\";\nimport { INFURA_ID } from \"../constants\";\n\nconst useUserProvider = (injectedProvider, localProvider) =>\nuseMemo(() => {\n  if (injectedProvider) {\n    console.log(\"🦊 Using injected provider\");\n    return injectedProvider;\n  }\n  if (!localProvider) return undefined;\n\n  let burnerConfig = {}\n\n  if(window.location.pathname){\n    if(window.location.pathname.indexOf(\"/pk\")>=0){\n      let incomingPK = window.location.hash.replace(\"#\",\"\")\n      let rawPK\n      if(incomingPK.length===64||incomingPK.length===66){\n        console.log(\"🔑 Incoming Private Key...\");\n        rawPK=incomingPK\n        burnerConfig.privateKey = rawPK\n        window.history.pushState({},\"\", \"/\");\n        let currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n        if(currentPrivateKey && currentPrivateKey!==rawPK){\n          window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);\n        }\n        window.localStorage.setItem(\"metaPrivateKey\",rawPK);\n      }\n    }\n  }\n\n  console.log(\"🔥 Using burner provider\",burnerConfig);\n  if (localProvider.connection && localProvider.connection.url) {\n    burnerConfig.rpcUrl = localProvider.connection.url\n    return new Web3Provider(new BurnerProvider(burnerConfig));\n  }else{\n    // eslint-disable-next-line no-underscore-dangle\n    const networkName = localProvider._network && localProvider._network.name;\n    burnerConfig.rpcUrl = `https://${networkName || \"mainnet\"}.infura.io/v3/${INFURA_ID}`\n    return new Web3Provider(new BurnerProvider(burnerConfig));\n  }\n}, [injectedProvider, localProvider]);\n\nexport default useUserProvider;\n","import { useEffect, useRef } from \"react\";\n\nexport default function usePoller(fn, delay, extraWatch) {\n  const savedCallback = useRef();\n  // Remember the latest fn.\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn]);\n  // Set up the interval.\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    console.log(\"tick\")\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n  // run at start too\n  useEffect(() => {\n    fn();\n  },[ extraWatch ]);\n}\n","import { useState, useEffect } from \"react\";\nimport usePoller from \"./Poller\";\n\nconst DEBUG = false;\n\nexport default function useContractReader(contracts, contractName, functionName, args, pollTime, formatter, onChange) {\n  let adjustPollTime = 1777;\n  if (pollTime) {\n    adjustPollTime = pollTime;\n  } else if (!pollTime && typeof args === \"number\") {\n    // it's okay to pass poll time as last argument without args for the call\n    adjustPollTime = args;\n  }\n\n  const [value, setValue] = useState();\n  useEffect(() => {\n    if (typeof onChange === \"function\") {\n      setTimeout(onChange.bind(this, value), 1);\n    }\n  }, [value, onChange]);\n\n  usePoller(\n    async () => {\n      if (contracts && contracts[contractName]) {\n        try {\n          let newValue;\n          if (DEBUG) console.log(\"CALLING \", contractName, functionName, \"with args\", args);\n          if (args && args.length > 0) {\n            newValue = await contracts[contractName][functionName](...args);\n            if (DEBUG)\n              console.log(\n                \"contractName\",\n                contractName,\n                \"functionName\",\n                functionName,\n                \"args\",\n                args,\n                \"RESULT:\",\n                newValue,\n              );\n          } else {\n            newValue = await contracts[contractName][functionName]();\n          }\n          if (formatter && typeof formatter === \"function\") {\n            newValue = formatter(newValue);\n          }\n          // console.log(\"GOT VALUE\",newValue)\n          if (newValue !== value) {\n            setValue(newValue);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    },\n    adjustPollTime,\n    contracts,\n  );\n\n  return value;\n}\n","import { useState } from \"react\";\nimport usePoller from \"./Poller\";\n\nexport default function useBalance(provider, address, pollTime) {\nconst [balance, setBalance] = useState();\nconst pollBalance = async () => {\n  if (address && provider) {\n    const newBalance = await provider.getBalance(address);\n    if (newBalance !== balance) {\n      // console.log(\"NEW BALANCE:\",newBalance,\"Current balance\",balance)\n      setBalance(newBalance);\n    }\n  }\n};\nusePoller(pollBalance, 27777, address && provider );\n\nreturn balance;\n}\n","import { useState, useEffect } from \"react\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { useLocalStorage } from \".\"\n\nconst lookupAddress = async (provider, address) => {\n  try {\n    // Accuracy of reverse resolution is not enforced.\n    // We then manually ensure that the reported ens name resolves to address\n    const reportedName = await provider.lookupAddress(address);\n    const resolvedAddress = await provider.resolveName(reportedName);\n    if (getAddress(address) === getAddress(resolvedAddress)) {\n      return reportedName;\n    }\n  } catch (e) {\n    // Do nothing\n  }\n  return \"\";\n};\n\nconst useLookupAddress = (provider, address) => {\n  const [ensName, setEnsName] = useState(address);\n  const [ensCache, setEnsCache] = useLocalStorage('ensCache_'+address);\n\n  useEffect(() => {\n    if( ensCache && ensCache.timestamp>Date.now()){\n      setEnsName(ensCache.name)\n    }else{\n      if (provider) {\n        lookupAddress(provider, address).then((name) => {\n          setEnsName(name)\n          setEnsCache({\n            timestamp:Date.now()+360000,\n            name:name\n          })\n        });\n      }\n    }\n  }, [ensCache, provider, address, setEnsName, setEnsCache]);\n\n  return ensName;\n};\n\nexport default useLookupAddress;\n","import { useState } from 'react';\n// Hook from useHooks! (https://usehooks.com/useLocalStorage/)\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Typography, Skeleton } from \"antd\";\nimport { useLookupAddress } from \"../hooks\";\n\n/*\n\n  Displays an address with a blockie, links to a block explorer, and can resolve ENS\n\n  <Address\n    value={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={optional_blockExplorer}\n    fontSize={optional_fontSize}\n  />\n\n*/\n\nconst { Text } = Typography;\n\nconst blockExplorerLink = (address, blockExplorer) => `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\n\nexport default function Address(props) {\n  const ens = useLookupAddress(props.ensProvider, props.value);\n\n  if (!props.value) {\n    return (\n      <span>\n        <Skeleton avatar paragraph={{ rows: 1 }} />\n      </span>\n    );\n  }\n\n  let displayAddress = props.value.substr(0, 6);\n\n  if (ens && ens.indexOf(\"0x\")<0) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + props.value.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = props.value;\n  }\n\n  const etherscanLink = blockExplorerLink(props.value, props.blockExplorer);\n  if (props.minimized) {\n    return (\n      <span style={{ verticalAlign: \"middle\" }}>\n        <a style={{ color: \"#222222\" }} target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\n          <Blockies seed={props.value.toLowerCase()} size={6} scale={2} />\n        </a>\n      </span>\n    );\n  }\n\n  let text;\n  if (props.onChange) {\n    text = (\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: props.value }}>\n        <a style={{ color: \"#222222\" }} target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  } else {\n    text = (\n      <Text copyable={{ text: props.value }}>\n        <a style={{ color: \"#222222\" }} target={\"_blank\"} href={etherscanLink} rel=\"noopener noreferrer\">\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  }\n\n  return (\n    <span className={'font-extralight'}>\n      <span style={{ verticalAlign: \"middle\" }}>\n        <Blockies seed={props.value.toLowerCase()} size={6} scale={props.fontSize?props.fontSize/7:4} className=\"float-left\" />\n      </span>\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5}}>{text}</span>\n    </span>\n  );\n}\n","import React, { useState } from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { usePoller } from \"eth-hooks\";\n\n/*\n\n  <Balance\n    address={selectedAddress}\n    provider={props.provider}\n    dollarMultiplier={props.price}\n  />\n\n*/\n\n\nexport default function Balance(props) {\n  const [dollarMode, setDollarMode] = useState(true);\n  const [balance, setBalance] = useState();\n\n  const getBalance = async () => {\n    if (props.address && props.provider) {\n      try {\n        const newBalance = await props.provider.getBalance(props.address);\n        setBalance(newBalance);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  usePoller(\n    () => {\n      getBalance();\n    },\n    props.pollTime ? props.pollTime : 1999,\n  );\n\n  let floatBalance = parseFloat(\"0.00\");\n\n  let usingBalance = balance;\n\n  if (typeof props.balance !== \"undefined\") {\n    usingBalance = props.balance;\n  }\n\n  if (usingBalance) {\n    const etherBalance = formatEther(usingBalance);\n    parseFloat(etherBalance).toFixed(2);\n    floatBalance = parseFloat(etherBalance);\n  }\n\n  let displayBalance = floatBalance.toFixed(4);\n\n  if (props.dollarMultiplier && dollarMode) {\n    displayBalance = \"$\" + (floatBalance * props.dollarMultiplier).toFixed(2);\n  }\n\n  return (\n    <span\n      style={{\n        verticalAlign: \"middle\",\n        padding: 8,\n        cursor: \"pointer\"\n      }}\n    \n      onClick={() => {\n        setDollarMode(!dollarMode);\n      }}\n    >\n      {displayBalance}\n    </span>\n  );\n}\n","import { hexlify } from \"@ethersproject/bytes\";\nimport { parseUnits } from \"@ethersproject/units\";\nimport { notification } from \"antd\";\n\nimport Notify from \"bnc-notify\";\n\n// this should probably just be renamed to \"notifier\"\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\n// https://docs.blocknative.com/notify\n\nexport default function Transactor(provider, gasPrice, etherscan) {\n  if (typeof provider !== \"undefined\") {\n    // eslint-disable-next-line consistent-return\n    return async tx => {\n      const signer = provider.getSigner();\n      const network = await provider.getNetwork();\n      console.log(\"network\", network);\n      const options = {\n        dappId: \"0b58206a-f3c0-4701-a62f-73c7243e8c77\", // GET YOUR OWN KEY AT https://account.blocknative.com\n        system: \"ethereum\",\n        networkId: network.chainId,\n        // darkMode: Boolean, // (default: false)\n        transactionHandler: txInformation => {\n          console.log(\"HANDLE TX\", txInformation);\n        },\n      };\n      const notify = Notify(options);\n\n      let etherscanNetwork = \"\";\n      if (network.name && network.chainId > 1) {\n        etherscanNetwork = network.name + \".\";\n      }\n\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\n      if (network.chainId === 100) {\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\n      }\n\n      try {\n        let result;\n        if (tx instanceof Promise) {\n          console.log(\"AWAITING TX\", tx);\n          result = await tx;\n        } else {\n          if (!tx.gasPrice) {\n            tx.gasPrice = gasPrice || parseUnits(\"4.1\", \"gwei\");\n          }\n          if (!tx.gasLimit) {\n            tx.gasLimit = hexlify(120000);\n          }\n          console.log(\"RUNNING TX\", tx);\n          result = await signer.sendTransaction(tx);\n        }\n        console.log(\"RESULT:\", result);\n        // console.log(\"Notify\", notify);\n\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\n        if ([1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0) {\n          const { emitter } = notify.hash(result.hash);\n          emitter.on(\"all\", transaction => {\n            return {\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\n            };\n          });\n        } else {\n          notification.info({\n            message: \"Local Transaction Sent\",\n            description: result.hash,\n            placement: \"bottomRight\",\n          });\n        }\n\n        return result;\n      } catch (e) {\n        console.log(e);\n        console.log(\"Transaction Error:\", e.message);\n        notification.error({\n          message: \"Transaction Error\",\n          description: e.message,\n        });\n      }\n    };\n  }\n}\n","import React from \"react\";\nimport Blockies from \"react-blockies\";\n\nexport default function Blockie(props) {\n  if (!props.address || typeof props.address.toLowerCase !== \"function\") {\n    return <span />;\n  }\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Blockies seed={props.address.toLowerCase()} {...props} />;\n}\n","import React, { useState, useCallback } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\nimport { Input, Badge } from \"antd\";\nimport { useLookupAddress } from \"eth-hooks\";\nimport Blockie from \"./Blockie\";\n\n/*\n\n<AddressInput\n  autoFocus\n  ensProvider={props.ensProvider}\n  placeholder=\"to address\"\n  value={toAddress}\n  onChange={setToAddress}\n/>\n\n*/\n\nexport default function AddressInput(props) {\n  const [value, setValue] = useState(props.value);\n  const [scan, setScan] = useState(false);\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n  const ens = useLookupAddress(props.ensProvider, currentValue);\n\n  const scannerButton = (\n    <div\n      style={{ marginTop: 4, cursor: \"pointer\" }}\n      onClick={() => {\n        setScan(!scan);\n      }}\n    >\n      <Badge count={<CameraOutlined style={{ fontSize: 9 }} />}>\n        <QrcodeOutlined style={{ fontSize: 18 }} />\n      </Badge>{\" \"}\n      Scan\n    </div>\n  );\n\n  const {ensProvider, onChange} = props;\n  const updateAddress = useCallback(\n    async newValue => {\n      if (typeof newValue !== \"undefined\") {\n        let address = newValue;\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\n          try {\n            const possibleAddress = await ensProvider.resolveName(address);\n            if (possibleAddress) {\n              address = possibleAddress;\n            }\n            // eslint-disable-next-line no-empty\n          } catch (e) {}\n        }\n        setValue(address);\n        if (typeof onChange === \"function\") {\n          onChange(address);\n        }\n      }\n    },\n    [ensProvider, onChange],\n  );\n\n  const scanner = scan ? (\n    <div\n      style={{\n        zIndex: 256,\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: \"100%\",\n      }}\n      onClick={() => {\n        setScan(false);\n      }}\n    >\n      <QrReader\n        delay={250}\n        resolution={1200}\n        onError={e => {\n          console.log(\"SCAN ERROR\", e);\n          setScan(false);\n        }}\n        onScan={newValue => {\n          if (newValue) {\n            console.log(\"SCAN VALUE\", newValue);\n            let possibleNewValue = newValue;\n            if (possibleNewValue.indexOf(\"/\") >= 0) {\n              possibleNewValue = possibleNewValue.substr(possibleNewValue.lastIndexOf(\"0x\"));\n              console.log(\"CLEANED VALUE\", possibleNewValue);\n            }\n            setScan(false);\n            updateAddress(possibleNewValue);\n          }\n        }}\n        style={{ width: \"100%\" }}\n      />\n    </div>\n  ) : (\n    \"\"\n  );\n\n  return (\n    <div>\n      {scanner}\n      <Input\n        id={\"0xAddress\"}//name it something other than address for auto fill doxxing\n        name={\"0xAddress\"}//name it something other than address for auto fill doxxing\n        autoComplete=\"off\"\n        autoFocus={props.autoFocus}\n        placeholder={props.placeholder ? props.placeholder : \"address\"}\n        prefix={<Blockie address={currentValue} size={8} scale={3} />}\n        value={ens || currentValue}\n        addonAfter={scannerButton}\n        onChange={e => {\n          updateAddress(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Input } from \"antd\";\n\n/*\n<EtherInput\n  price={props.price}\n  value={amount}\n  onChange={value => {\n    setAmount(value);\n  }}\n/>\n*/\n\nexport default function EtherInput(props) {\n  const [mode, setMode] = useState(props.price ? \"USD\" : \"ETH\");\n  const [display, setDisplay] = useState();\n  const [value, setValue] = useState();\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n\n  const option = title => {\n    if (!props.price) return \"\";\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          if (mode === \"USD\") {\n            setMode(\"ETH\");\n            setDisplay(currentValue);\n          } else {\n            setMode(\"USD\");\n            if (currentValue) {\n              const usdValue = \"\" + (parseFloat(currentValue) * props.price).toFixed(2);\n              setDisplay(usdValue);\n            } else {\n              setDisplay(currentValue);\n            }\n          }\n        }}\n      >\n        {title}\n      </div>\n    );\n  };\n\n  let prefix;\n  let addonAfter;\n  if (mode === \"USD\") {\n    prefix = \"$\";\n    addonAfter = option(\"USD 🔀\");\n  } else {\n    prefix = \"Ξ\";\n    addonAfter = option(\"ETH 🔀\");\n  }\n\n  useEffect(\n    ()=>{\n      if(!currentValue){\n        setDisplay(\"\");\n      }\n    }\n  ,[ currentValue ])\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"amount in \" + mode}\n      autoFocus={props.autoFocus}\n      prefix={prefix}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async e => {\n        const newValue = e.target.value;\n        if (mode === \"USD\") {\n          const ethValue = parseFloat(newValue) / props.price;\n          setValue(ethValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(ethValue);\n          }\n          setDisplay(newValue);\n        } else {\n          setValue(newValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(newValue);\n          }\n          setDisplay(newValue);\n        }\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport { WalletOutlined, QrcodeOutlined, SendOutlined, KeyOutlined } from \"@ant-design/icons\";\nimport { Tooltip, Spin, Modal, Button, Typography } from \"antd\";\nimport QR from \"qrcode.react\";\nimport { parseEther } from \"@ethersproject/units\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport Balance from \"./Balance\";\nimport AddressInput from \"./AddressInput\";\nimport EtherInput from \"./EtherInput\";\nimport { ethers } from \"ethers\";\nconst { Text, Paragraph } = Typography;\n\n/*\n\n  Wallet UI for sending, receiving, and extracting the burner wallet\n\n  <Wallet\n    address={address}\n    provider={userProvider}\n    ensProvider={mainnetProvider}\n    price={price}\n  />\n\n*/\n\nexport default function Wallet(props) {\n  const signerAddress = useUserAddress(props.provider);\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState()\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen(!open);\n        }}\n        rotate={-90}\n        style={{\n          padding: 7,\n          color: props.color ? props.color : \"#1890ff\",\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : (\n    \"\"\n  );\n\n  let display;\n  let receiveButton;\n  let privateKeyButton\n  if (qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size=\"450\"\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setQr(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    );\n    privateKeyButton = (\n     <Button key=\"hide\" onClick={()=>{setPK(selectedAddress);setQr(\"\")}}>\n       <KeyOutlined /> Private Key\n     </Button>\n   )\n }else if(pk){\n\n   let pk = localStorage.getItem(\"metaPrivateKey\")\n   let wallet = new ethers.Wallet(pk)\n\n   if(wallet.address!==selectedAddress){\n     display = (\n       <div>\n         <b>*injected account*, private key unknown</b>\n       </div>\n     )\n   }else{\n\n     let extraPkDisplayAdded = {}\n     let extraPkDisplay = []\n     extraPkDisplayAdded[wallet.address] = true\n     extraPkDisplay.push(\n       <div style={{fontSize:16,padding:2,backgroundStyle:\"#89e789\"}}>\n          <a href={\"/pk#\"+pk}>\n            <Address minimized={true} value={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0,6)}\n          </a>\n       </div>\n     )\n     for (var key in localStorage){\n       if(key.indexOf(\"metaPrivateKey_backup\")>=0){\n         console.log(key)\n         let pastpk = localStorage.getItem(key)\n         let pastwallet = new ethers.Wallet(pastpk)\n         if(!extraPkDisplayAdded[pastwallet.address] /*&& selectedAddress!=pastwallet.address*/){\n           extraPkDisplayAdded[pastwallet.address] = true\n           extraPkDisplay.push(\n             <div style={{fontSize:16}}>\n                <a href={\"/pk#\"+pastpk}>\n                  <Address minimized={true} value={pastwallet.address} ensProvider={props.ensProvider} /> {pastwallet.address.substr(0,6)}\n                </a>\n             </div>\n           )\n         }\n       }\n     }\n\n\n     display = (\n       <div>\n         <b>Private Key:</b>\n\n         <div>\n          <Text copyable>{pk}</Text>\n          </div>\n\n          <hr/>\n\n         <i>Point your camera phone at qr code to open in\n           <a target=\"_blank\" href={\"https://xdai.io/\"+pk} rel=\"noopener noreferrer\">burner wallet</a>:\n         </i>\n         <QR value={\"https://xdai.io/\"+pk} size={\"450\"} level={\"H\"} includeMargin={true} renderAs={\"svg\"} imageSettings={{excavate:false}}/>\n\n         <Paragraph style={{fontSize:\"16\"}} copyable>{\"https://xdai.io/\"+pk}</Paragraph>\n\n         {extraPkDisplay?(\n           <div>\n             <h3>\n              Known Private Keys:\n             </h3>\n             {extraPkDisplay}\n             <Button onClick={()=>{\n               let currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n               if(currentPrivateKey){\n                 window.localStorage.setItem(\"metaPrivateKey_backup\"+Date.now(),currentPrivateKey);\n               }\n               const randomWallet = ethers.Wallet.createRandom()\n               const privateKey = randomWallet._signingKey().privateKey\n               window.localStorage.setItem(\"metaPrivateKey\",privateKey);\n               window.location.reload()\n             }}>\n              Generate\n             </Button>\n           </div>\n         ):\"\"}\n\n       </div>\n     )\n   }\n\n   receiveButton = (\n     <Button key=\"receive\" onClick={()=>{setQr(selectedAddress);setPK(\"\")}}>\n       <QrcodeOutlined /> Receive\n     </Button>\n   )\n   privateKeyButton = (\n     <Button key=\"hide\" onClick={()=>{setPK(\"\");setQr(\"\")}}>\n       <KeyOutlined /> Hide\n     </Button>\n   )\n  } else {\n    const inputStyle = {\n      padding: 10,\n    };\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            value={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button key=\"hide\" onClick={()=>{setPK(selectedAddress);setQr(\"\")}}>\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address value={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        onCancel={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        footer={[\n          privateKeyButton, receiveButton,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!amount || !toAddress || qr}\n            loading={false}\n            onClick={() => {\n              const tx = Transactor(props.provider);\n\n              let value;\n              try {\n                value = parseEther(\"\" + amount);\n              } catch (e) {\n                // failed to parseEther, try something else\n                value = parseEther(\"\" + parseFloat(amount).toFixed(8));\n              }\n\n              tx({\n                to: toAddress,\n                value,\n              });\n              setOpen(!open);\n              setQr();\n            }}\n          >\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport Address from \"./Address\";\nimport Balance from \"./Balance\";\nimport Wallet from \"./Wallet\";\n\nexport default function Account({\n  address,\n  userProvider,\n  localProvider,\n  mainnetProvider,\n  price,\n  minimized,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n  blockExplorer,\n}) {\n  const modalButtons = [];\n  if (web3Modal) {\n    if (web3Modal.cachedProvider) {\n      modalButtons.push(\n        <Button\n          key=\"logoutbutton\"\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\n          shape=\"round\"\n          size=\"large\"\n          onClick={logoutOfWeb3Modal}\n        >\n          logout\n        </Button>,\n      );\n    } else {\n      modalButtons.push(\n        <Button\n          key=\"loginbutton\"\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\n          shape=\"round\"\n          size=\"large\"\n          /*type={minimized ? \"default\" : \"primary\"}     too many people just defaulting to MM and having a bad time*/\n          onClick={loadWeb3Modal}\n        >\n          connect1\n        </Button>,\n      );\n    }\n  }\n\n  const display = minimized ? (\n    \"\"\n  ) : (\n    <span>\n      {address ? <Address value={address} ensProvider={mainnetProvider} blockExplorer={blockExplorer} /> : \"Connecting...\"}\n      <Balance address={address} provider={localProvider} dollarMultiplier={price} />\n      <Wallet address={address} provider={userProvider} ensProvider={mainnetProvider} price={price} />\n    </span>\n  );\n\n  return (\n    <div>\n      {display}\n      {modalButtons}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { isAddress } from \"@ethersproject/address\";\nimport { Address } from \"../../components\";\n\nconst tryToDisplay = thing => {\n  if (thing && thing.toNumber) {\n    try {\n      return thing.toNumber();\n    } catch (e) {\n      return \"Ξ\"+formatUnits(thing, \"ether\");\n    }\n  }\n  if(thing && thing.indexOf && thing.indexOf(\"0x\")==0 && thing.length == 42){\n    return (\n      <Address\n        value={thing}\n        fontSize={22}\n      />\n    )\n  }\n  return JSON.stringify(thing);\n};\n\nexport default tryToDisplay;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from \"react\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Row, Col, Input, Divider, Tooltip, Button } from \"antd\";\nimport { Transactor } from \"../../helpers\";\nimport tryToDisplay from \"./utils\";\nimport Blockies from \"react-blockies\";\nconst { utils } = require(\"ethers\");\n\n\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\n  const [form, setForm] = useState({});\n  const [txValue, setTxValue] = useState();\n  const [returnValue, setReturnValue] = useState();\n\n  const tx = Transactor(provider, gasPrice);\n\n  let inputIndex = 0;\n  const inputs = functionInfo.inputs.map(input => {\n\n    const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + inputIndex++\n\n    let buttons = \"\"\n    if (input.type === \"bytes32\") {\n      buttons = (\n        <Tooltip placement=\"right\" title={\"to bytes32\"}>\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.parseBytes32String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.formatBytes32String(form[key]);\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n            </div>\n        </Tooltip>\n      )\n    } else if (input.type === \"bytes\") {\n      buttons = (\n        <Tooltip placement=\"right\" title={\"to hex\"}>\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.toUtf8String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key]))\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n            </div>\n        </Tooltip>\n      )\n    } else if (input.type == \"uint256\") {\n      buttons = (\n        <Tooltip placement=\"right\" title={\"* 10 ** 18\"}>\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              const formUpdate = { ...form };\n              formUpdate[key] = utils.parseEther(form[key])\n              setForm(formUpdate);\n            }}\n          >\n            ✴️\n            </div>\n        </Tooltip>\n      )\n    } else if (input.type == \"address\") {\n      const possibleAddress = form[key]&&form[key].toLowerCase&&form[key].toLowerCase().trim()\n      if(possibleAddress && possibleAddress.length==42){\n        buttons = (\n          <Tooltip placement=\"right\" title={\"blockie\"}>\n            <Blockies seed={possibleAddress} scale={3} />\n          </Tooltip>\n        )\n      }\n    }\n\n\n\n\n    return (\n      <div style={{ margin: 2 }} key={key}>\n        <Input\n          size=\"large\"\n          placeholder={input.name ? input.type + \" \" + input.name : input.type}\n          autoComplete=\"off\"\n          value={form[key]}\n          name={key}\n          onChange={(event) => {\n            const formUpdate = { ...form };\n            formUpdate[event.target.name] = event.target.value;\n            setForm(formUpdate);\n          }}\n          suffix={buttons}\n        />\n      </div>\n    )\n  });\n\n  const txValueInput = (\n    <div style={{ margin: 2 }} key={\"txValueInput\"}>\n      <Input\n        placeholder=\"transaction value\"\n        onChange={e => setTxValue(e.target.value)}\n        value={txValue}\n        addonAfter={\n          <div>\n            <Row>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title={\" * 10^18 \"}>\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      let floatValue = parseFloat(txValue)\n                      if(floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\n                    }}\n                  >\n                    ✳️\n                  </div>\n                </Tooltip>\n              </Col>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title={\"number to hex\"}>\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      setTxValue(BigNumber.from(txValue).toHexString());\n                    }}\n                  >\n                    #️⃣\n                </div>\n                </Tooltip>\n              </Col>\n            </Row>\n          </div>\n        }\n      />\n    </div>\n  );\n\n  if (functionInfo.payable) {\n    inputs.push(txValueInput);\n  }\n\n  const buttonIcon = functionInfo.type === \"call\" ? <Button style={{ marginLeft: -32 }}>Read📡</Button> : <Button style={{ marginLeft: -32 }}>Send💸</Button>;\n  inputs.push(\n    <div style={{ cursor: \"pointer\", margin: 2 }} key={\"goButton\"}>\n      <Input\n        onChange={e => setReturnValue(e.target.value)}\n        defaultValue=\"\"\n        bordered={false}\n        disabled={true}\n        value={returnValue}\n        suffix={\n          <div\n            style={{ width: 50, height: 30, margin: 0 }}\n            type=\"default\"\n            onClick={async () => {\n              let innerIndex = 0\n              const args = functionInfo.inputs.map((input) => {\n                const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + innerIndex++\n                let value = form[key]\n                if(input.baseType==\"array\"){\n                  value = JSON.parse(value)\n                } else if(input.type === \"bool\"){\n                  if(value==='true' || value==='1' || value ===\"0x1\"|| value ===\"0x01\"|| value ===\"0x0001\"){\n                    value = 1;\n                  }else{\n                    value = 0;\n                  }\n                }\n                return value\n              });\n\n              let result\n              if(functionInfo.stateMutability === \"view\"||functionInfo.stateMutability === \"pure\"){\n                const returned = await contractFunction(...args)\n                result = tryToDisplay(returned);\n              }else{\n                const overrides = {};\n                if (txValue) {\n                  overrides.value = txValue; // ethers.utils.parseEther()\n                }\n\n                // console.log(\"Running with extras\",extras)\n                const returned = await tx(contractFunction(...args, overrides));\n                result = tryToDisplay(returned);\n              }\n\n\n              console.log(\"SETTING RESULT:\", result);\n              setReturnValue(result);\n              triggerRefresh(true);\n            }}\n          >\n            {buttonIcon}\n          </div>\n        }\n      />\n    </div>,\n  );\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={16}>{inputs}</Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Timeline, Typography } from \"antd\";\nimport { SendOutlined, DownloadOutlined, EditOutlined } from \"@ant-design/icons\";\n\nconst { Text } = Typography;\n\nexport default function TimelineDisplay(props) {\n  return (\n    <Timeline mode=\"right\">\n      <Timeline.Item dot=\"💾\">\n        <Text delete>\n          Clone and Install from the{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\n            github repo\n          </a>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⚛️\">\n        <Text delete>\n          Start your frontend app with: <Text strong>yarn start</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⛓\">\n        <Text delete={props.chainIsUp}>\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📝\">\n        <Text delete={props.hasOwner}>\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🤡\">\n        <Text delete={props.isNotSmoort}>\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: \"16px\" }} />} color={props.hasEther ? \"green\" : \"blue\"}>\n        <Text delete={props.hasEther}>\n          Send test ether to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address using\n          (bottom left) faucet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<DownloadOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.contractHasEther ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.contractHasEther}>\n          Deposit some funds into your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<EditOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.amOwnerOfContract ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.amOwnerOfContract}>\n          Set <b>owner</b> of your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"☢️\">\n        <Text>\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🔬\">\n        <Text>\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\n          <Text strong>yarn run test</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🚀\">\n        <Text>\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\n            @ me\n          </a>\n          !\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📖\">\n        <Text>\n          Read more about{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\n            Ethereum\n          </a>\n          ,{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\n            Solidity\n          </a>\n          , and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\n            Buidler\n          </a>\n        </Text>\n      </Timeline.Item>\n    </Timeline>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { usePoller } from \"eth-hooks\";\nimport { Button, List, Divider, Input, Card, DatePicker, Slider, Switch, Progress, Spin, Popover } from \"antd\";\nimport tryToDisplay from \"./Contract/utils\";\nimport { useContractReader, useEventListener } from \"../hooks/index\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\n\nexport default function TreeContent(props) {\n  //const [bountyPool, setBountyPool] = useState();\n  const { Meta } = Card;\n  const [treeInfo, setTreeInfo] = useState();\n  // Update the document title using the browser API\n  //console.log(props);\n  console.log(props.id);\n  const treeDetails = useContractReader(props.readContracts, \"Arboretum\", \"treeInfo\", [props.id]);\n  //const MyTreeStats = useContractReader(props.readContracts, \"Arboretum\", \"statsForTree\", [props.id, props.address]);\n  // console.log(\n  //   \"MyTreeStats : \",\n  //   MyTreeStats,\n  //   MyTreeStats ? tryToDisplay(MyTreeStats.fruitEarned) : \"\",\n  //   MyTreeStats,\n  //   MyTreeStats ? tryToDisplay(MyTreeStats.lastDue) : \"\",\n  //   MyTreeStats,\n  //   MyTreeStats ? tryToDisplay(MyTreeStats.nextDue) : \"\",\n  // );\n  console.log(\"tree : \", props.id, treeDetails, treeDetails ? tryToDisplay(treeDetails.bountyPool) : \"\");\n  // console.log(\"plantStamp : \", treeDetails ? tryToDisplay(treeDetails.planted) : \"\");\n  // console.log(\"paymentFrequency : \", treeDetails ? tryToDisplay(treeDetails.paymentFrequency) : \"\");\n  // console.log(\"paymentSize : \", treeDetails ? tryToDisplay(treeDetails.paymentSize) : \"\");\n  // console.log(\"bountyPool : \", treeDetails ? tryToDisplay(treeDetails.bountyPool) : \"\");\n  // console.log(\"id : \", treeDetails ? tryToDisplay(treeDetails.id) : \"\");\n  // console.log(\"startDate : \", treeDetails ? tryToDisplay(treeDetails.startDate) : \"\");\n  // console.log(\"treeDuration : \", treeDetails ? tryToDisplay(treeDetails.treeDuration) : \"\");\n  // console.log(\"waterersNeeded : \", treeDetails ? tryToDisplay(treeDetails.waterersNeeded) : \"\");\n\n  function getStateDate(UNIXimestamp) {\n    const a = new Date(UNIXimestamp * 1000);\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const year = a.getFullYear();\n    const month = months[a.getMonth()];\n    const date = a.getDate();\n    const hour = a.getHours();\n    const min = a.getMinutes();\n    const sec = a.getSeconds();\n    const time = date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min + \":\" + sec;\n    return time;\n\n    // const d = new Date(UNIX_timestamp * 1000);\n    // return d.toGMTString();\n  }\n\n  function getDurationInDate(duration) {\n    switch (duration) {\n      case 604800:\n        return \"1 Week\";\n      case 1209600:\n        return \"2 Week\";\n      case 2629746:\n        return \"1 Month\";\n      case 5259492:\n        return \"2 Month\";\n      case 10518984:\n        return \"4 Months\";\n      case 15778476:\n        return \"6 Months\";\n      case 31556952:\n        return \"1 Year\";\n      default:\n        return \"0\";\n    }\n  }\n\n  function getEndDate(startDate, duration) {\n    return getStateDate(startDate + duration);\n  }\n\n  function getCountdown(startDate) {\n    const now = new Date().getTime();\n    const distance = startDate * 1000 - now;\n    const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n    return days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \";\n  }\n\n  function WaterBtnDisable(date) {\n    const startDate = date * 1000;\n    const now = new Date().getTime();\n    return startDate < now;\n  }\n\n  function getTreeType() {\n    let whichTree = treeDetails\n      ? (tryToDisplay(treeDetails.planted) +\n          Math.floor(tryToDisplay(treeDetails.startDate) / 10000) +\n          Math.floor(tryToDisplay(treeDetails.treeDuration) / 10000) +\n          tryToDisplay(treeDetails.id)) %\n        5\n      : \"0\";\n    let whichStage = 4;\n    return whichTree + \"/\" + whichStage;\n  }\n\n  return (\n    // <Card style={{ width: 300 }} id={props.e} key={props.e}>\n    //   <div>\n    //     <p>Bounty : {treeDetails ? tryToDisplay(treeDetails.bountyPool) : \"\"}</p>\n    //     <p>fee : {treeDetails ? tryToDisplay(treeDetails.fee) : \"\"}</p>\n    //     <p>paymentFrequency : {treeDetails ? tryToDisplay(treeDetails.paymentFrequency) : \"\"}</p>\n    //     <p>paymentSize : {treeDetails ? tryToDisplay(treeDetails.paymentSize) : \"\"}</p>\n    //     <p>startDate : {treeDetails ? getStateDate(tryToDisplay(treeDetails.startDate)) : \"\"}</p>\n    //     <p>\n    //       endDate :{\" \"}\n    //       {treeDetails ? getEndDate(tryToDisplay(treeDetails.startDate), tryToDisplay(treeDetails.treeDuration)) : \"\"}\n    //     </p>\n    //     <p>treeDuration : {treeDetails ? getDurationInDate(tryToDisplay(treeDetails.treeDuration)) : \"\"}</p>\n    //     <p>waterersNeeded : {treeDetails ? tryToDisplay(treeDetails.waterersNeeded) : \"\"}</p>\n    //     <p>Countdown : {treeDetails ? getCountdown(tryToDisplay(treeDetails.startDate)) : \"\"}</p>\n    //   </div>\n    //   <div>\n    //     <Button\n    //       disabled={treeDetails ? WaterBtnDisable(tryToDisplay(treeDetails.startDate)) : \"\"}\n    //       onClick={() => {\n    //         /* look how we call setPurpose AND send some value along */\n    //         props.tx(\n    //           props.writeContracts.Arboretum.water(props.id, {\n    //             value: treeDetails ? parseEther(formatEther(treeDetails.paymentSize)) : \"\",\n    //           }),\n    //         );\n    //       }}\n    //     >\n    //       Water It\n    //     </Button>\n    //     <Button\n    //       onClick={() => {\n    //         /* look how we call setPurpose AND send some value along */\n    //         props.tx(props.writeContracts.Arboretum.redeem(props.id));\n    //       }}\n    //     >\n    //       Redeem\n    //     </Button>\n    //   </div>\n    //   <Divider />\n    //   <div>\n    //     <p>fruitEarned : {MyTreeStats ? tryToDisplay(MyTreeStats.fruitEarned) : \"\"}</p>\n    //     <p>lastDue : {MyTreeStats ? getCountdown(tryToDisplay(MyTreeStats.lastDue)) : \"\"}</p>\n    //     <p>lastDue(seconds) : {MyTreeStats ? tryToDisplay(MyTreeStats.lastDue) : \"\"}</p>\n    //     <p>nextDue : {MyTreeStats ? getCountdown(tryToDisplay(MyTreeStats.nextDue)) : \"\"}</p>\n    //   </div>\n    // </Card>\n\n    <Card\n      id={props.e}\n      key={props.e}\n      hoverable\n      style={{ width: 300, marginBottom: \"30px\" }}\n      cover={<img alt=\"tree\" src={require(`../tree/${getTreeType()}.png`)} />}\n    >\n      <p>\n        Tree Type :{\" \"}\n        {treeDetails\n          ? (tryToDisplay(treeDetails.planted) +\n              Math.floor(tryToDisplay(treeDetails.startDate) / 10000) +\n              Math.floor(tryToDisplay(treeDetails.treeDuration) / 10000) +\n              tryToDisplay(treeDetails.id)) %\n            5\n          : \"0\"}\n      </p>\n      <h3>Bounty : {treeDetails ? tryToDisplay(treeDetails.bountyPool) : \"\"}</h3>\n      <p>Start Date : {treeDetails ? getStateDate(tryToDisplay(treeDetails.startDate)) : \"\"}</p>\n      <p>\n        End Date :{\" \"}\n        {treeDetails ? getEndDate(tryToDisplay(treeDetails.startDate), tryToDisplay(treeDetails.treeDuration)) : \"\"}\n      </p>\n\n      <p>Fee : {treeDetails ? tryToDisplay(treeDetails.fee) : \"\"}</p>\n      <p>Frequency: {treeDetails ? tryToDisplay(treeDetails.paymentFrequency) : \"\"}</p>\n      <p>Payment Size : {treeDetails ? tryToDisplay(treeDetails.paymentSize) : \"\"}</p>\n\n      <Button\n        disabled={treeDetails ? WaterBtnDisable(tryToDisplay(treeDetails.startDate)) : \"\"}\n        onClick={() => {\n          /* look how we call setPurpose AND send some value along */\n          props.tx(\n            props.writeContracts.Arboretum.water(props.id, {\n              value: treeDetails ? parseEther(formatEther(treeDetails.paymentSize)) : \"\",\n            }),\n          );\n        }}\n      >\n        Water It\n      </Button>\n      <Button\n        onClick={() => {\n          /* look how we call setPurpose AND send some value along */\n          props.tx(props.writeContracts.Arboretum.redeem(props.id));\n        }}\n      >\n        Redeem\n      </Button>\n    </Card>\n  );\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { Address, AddressInput } from \"../components\";\n\n\nexport default function Hints({yourLocalBalance, mainnetProvider, price, address }) {\n\n  return (\n    <div>\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>👷</span>\n        Edit your <b>contract</b> in\n        <span style={{ marginLeft: 4, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          packages/hardhat/contracts\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🛰</span>\n        <b>compile/deploy</b> with\n        <span style={{ marginLeft: 4, backgroundColor: \"#f1f1f1\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn run deploy\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🚀</span>\n        Your <b>contract artifacts</b> are automatically injected into your frontend at\n        <span style={{ marginLeft: 4, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          packages/react-app/src/contracts/\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🎛</span>\n        Edit your <b>frontend</b> in\n        <span style={{ marginLeft: 4, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          packages/reactapp/src/App.js\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🔭</span>\n        explore the\n        <span\n          style={{\n            marginLeft: 4,\n            marginRight: 4,\n            backgroundColor: \"#f9f9f9\",\n            padding: 4,\n            borderRadius: 4,\n            fontWeight: \"bolder\",\n          }}\n        >\n          🖇 hooks\n        </span>\n        and\n        <span style={{ marginLeft: 4, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          📦 components\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        for example, the\n        <span style={{ margin: 4, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          useBalance()\n        </span>{\" \"}\n        hook keeps track of your balance: <b>{formatEther(yourLocalBalance?yourLocalBalance:0)}</b>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        as you build your app you'll need web3 specific components like an\n        <span style={{ margin: 4, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          {\"<AddressInput/>\"}\n        </span>\n        component:\n        <div style={{ width: 350, padding: 16, margin: \"auto\" }}>\n          <AddressInput ensProvider={mainnetProvider} />\n        </div>\n        <div>(try putting in your address, an ens address, or scanning a QR code)</div>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        this balance could be multiplied by\n        <span style={{ margin: 4, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          price\n        </span>{\" \"}\n        that is loaded with the\n        <span style={{ margin: 4, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          usePrice\n        </span>{\" \"}\n        hook with the current value: <b>${price}</b>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>💧</span>\n        use the <b>faucet</b> to send funds to\n        <span style={{ marginLeft: 4, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          <Address value={address} minimized /> {address}\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>📡</span>\n        deploy to a testnet or mainnet by editing\n        <span style={{ marginLeft: 4, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          packages/hardhat/hardhat.config.js\n        </span>\n        and running\n        <span style={{ marginLeft: 4, backgroundColor: \"#f1f1f1\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn run deploy\n        </span>\n      </div>\n\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🔑</span>\n        <span style={{ marginLeft: 4, backgroundColor: \"#f1f1f1\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn run generate\n        </span>\n        will create a deployer account in\n        <span style={{ marginLeft: 4, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          packages/hardhat\n        </span>\n        <div style={{marginTop:8}}>(use <span style={{ marginLeft: 4, backgroundColor: \"#f1f1f1\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n            yarn run account\n          </span> to display deployer address and balance)</div>\n      </div>\n\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>⚙️</span>\n        build your app with\n        <span style={{ marginLeft: 4, backgroundColor: \"#f1f1f1\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn run build\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🚢</span>\n        ship it!\n        <span style={{ marginLeft: 4, backgroundColor: \"#f1f1f1\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn run surge\n        </span>\n        or\n        <span style={{ marginLeft: 4, backgroundColor: \"#f1f1f1\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn run s3\n        </span>\n        or\n        <span style={{ marginLeft: 4, backgroundColor: \"#f1f1f1\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          yarn run ipfs\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>💬</span>\n        for support, join this\n        <span style={{ marginLeft: 4, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\">\n            Telegram Chat\n          </a>\n        </span>\n      </div>\n      <div style={{ padding: 128 }}>\n        🛠 Check out your browser's developer console for more... (inpect -> console) 🚀\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React, { useState } from \"react\";\nimport { Button, List, Divider, Input, Card, DatePicker, Slider, Switch, Progress, Spin } from \"antd\";\nimport { SyncOutlined } from '@ant-design/icons';\nimport { Address, Balance } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\n\nexport default function ExampleUI({purpose, setPurposeEvents, address, mainnetProvider, userProvider, localProvider, yourLocalBalance, price, tx, readContracts, writeContracts }) {\n\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n\n  return (\n    <div>\n      {/*\n        ⚙️ Here is an example UI that displays and sets the purpose in your smart contract:\n      */}\n      <div style={{border:\"1px solid #cccccc\", padding:16, width:400, margin:\"auto\",marginTop:64}}>\n        <h2>Example UI:</h2>\n\n        <h4>purpose: {purpose}</h4>\n\n        <Divider/>\n\n        <div style={{margin:8}}>\n          <Button onClick={()=>{\n              //uint duration, uint freq, uint payment_size, uint lapse_limit, uint start_date, uint min_waterers\n              let paymentSize = parseEther(\"0.001\");\n\n            tx( writeContracts.Arboretum.plant(\"864000\", \"10\", \"10000000000000000\", \"5\", \"1611902014\", \"20\", {\n              value: parseEther(\"15\")\n            }))\n            /* this will fail until you make the setPurpose function payable */\n          }}>Plant A Seed</Button>\n        </div>\n\n        <div style={{margin:8}}>\n          <Input onChange={(e)=>{setNewPurpose(e.target.value)}} />\n          <Button onClick={()=>{\n            console.log(\"newPurpose\",newPurpose)\n            /* look how you call setPurpose on your contract: */\n            tx( writeContracts.YourContract.setPurpose(newPurpose) )\n          }}>Set Purpose</Button>\n        </div>\n\n\n        <Divider />\n\n        Your Address:\n        <Address\n            value={address}\n            ensProvider={mainnetProvider}\n            fontSize={16}\n        />\n\n        <Divider />\n\n        ENS Address Example:\n        <Address\n          value={\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"} /* this will show as austingriffith.eth */\n          ensProvider={mainnetProvider}\n          fontSize={16}\n        />\n\n        <Divider/>\n\n        {  /* use formatEther to display a BigNumber: */ }\n        <h2>Your Balance: {yourLocalBalance?formatEther(yourLocalBalance):\"...\"}</h2>\n\n        OR\n\n        <Balance\n          address={address}\n          provider={localProvider}\n          dollarMultiplier={price}\n        />\n\n        <Divider/>\n\n\n        {  /* use formatEther to display a BigNumber: */ }\n        <h2>Your Balance: {yourLocalBalance?formatEther(yourLocalBalance):\"...\"}</h2>\n\n        <Divider/>\n\n\n\n        Your Contract Address:\n        <Address\n            value={readContracts?readContracts.YourContract.address:readContracts}\n            ensProvider={mainnetProvider}\n            fontSize={16}\n        />\n\n        <Divider />\n\n        <div style={{margin:8}}>\n          <Button onClick={()=>{\n            /* look how you call setPurpose on your contract: */\n            tx( writeContracts.YourContract.setPurpose(\"🍻 Cheers\") )\n          }}>Set Purpose to \"🍻 Cheers\"</Button>\n        </div>\n\n        <div style={{margin:8}}>\n          <Button onClick={()=>{\n            /*\n              you can also just craft a transaction and send it to the tx() transactor\n              here we are sending value straight to the contract's address:\n            */\n            tx({\n              to: writeContracts.YourContract.address,\n              value: parseEther(\"0.001\")\n            });\n            /* this should throw an error about \"no fallback nor receive function\" until you add it */\n          }}>Send Value</Button>\n        </div>\n\n        <div style={{margin:8}}>\n          <Button onClick={()=>{\n            /* look how we call setPurpose AND send some value along */\n            tx( writeContracts.YourContract.setPurpose(\"💵 Paying for this one!\",{\n              value: parseEther(\"0.001\")\n            }))\n            /* this will fail until you make the setPurpose function payable */\n          }}>Set Purpose With Value</Button>\n        </div>\n\n\n        <div style={{margin:8}}>\n          <Button onClick={()=>{\n            /* you can also just craft a transaction and send it to the tx() transactor */\n            tx({\n              to: writeContracts.YourContract.address,\n              value: parseEther(\"0.001\"),\n              data: writeContracts.YourContract.interface.encodeFunctionData(\"setPurpose(string)\",[\"🤓 Whoa so 1337!\"])\n            });\n            /* this should throw an error about \"no fallback nor receive function\" until you add it */\n          }}>Another Example</Button>\n        </div>\n\n      </div>\n\n      {/*\n        📑 Maybe display a list of events?\n          (uncomment the event and emit line in YourContract.sol! )\n      */}\n      <div style={{ width:600, margin: \"auto\", marginTop:32, paddingBottom:32 }}>\n        <h2>Events:</h2>\n        <List\n          bordered\n          dataSource={setPurposeEvents}\n          renderItem={(item) => {\n            return (\n              <List.Item key={item.blockNumber+\"_\"+item.sender+\"_\"+item.purpose}>\n                <Address\n                    value={item[0]}\n                    ensProvider={mainnetProvider}\n                    fontSize={16}\n                  /> =>\n                {item[1]}\n              </List.Item>\n            )\n          }}\n        />\n      </div>\n\n\n      <div style={{ width:600, margin: \"auto\", marginTop:32, paddingBottom:256 }}>\n\n        <Card>\n\n          Check out all the <a href=\"https://github.com/austintgriffith/scaffold-eth/tree/master/packages/react-app/src/components\" target=\"_blank\" rel=\"noopener noreferrer\">📦  components</a>\n\n        </Card>\n\n        <Card style={{marginTop:32}}>\n\n          <div>\n            There are tons of generic components included from <a href=\"https://ant.design/components/overview/\" target=\"_blank\" rel=\"noopener noreferrer\">🐜  ant.design</a> too!\n          </div>\n\n          <div style={{marginTop:8}}>\n            <Button type=\"primary\">\n              Buttons\n            </Button>\n          </div>\n\n          <div style={{marginTop:8}}>\n            <SyncOutlined spin />  Icons\n          </div>\n\n          <div style={{marginTop:8}}>\n            Date Pickers?\n            <div style={{marginTop:2}}>\n              <DatePicker onChange={()=>{}}/>\n            </div>\n          </div>\n\n          <div style={{marginTop:32}}>\n            <Slider range defaultValue={[20, 50]} onChange={()=>{}}/>\n          </div>\n\n          <div style={{marginTop:32}}>\n            <Switch defaultChecked onChange={()=>{}} />\n          </div>\n\n          <div style={{marginTop:32}}>\n            <Progress percent={50} status=\"active\" />\n          </div>\n\n          <div style={{marginTop:32}}>\n            <Spin />\n          </div>\n\n\n        </Card>\n\n\n\n\n      </div>\n\n\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React, { useState } from \"react\";\nimport \"../antd-saveus.css\";\nimport { Button, Typography, Table, Input } from \"antd\";\nimport { useQuery, gql } from '@apollo/client';\nimport { Address } from \"../components\";\nimport GraphiQL from 'graphiql';\nimport 'graphiql/graphiql.min.css';\nimport fetch from 'isomorphic-fetch';\n\n  const highlight = { marginLeft: 4, marginRight: 8, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }\n\nfunction Subgraph(props) {\n\n  function graphQLFetcher(graphQLParams) {\n    return fetch(props.subgraphUri, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(graphQLParams),\n    }).then(response => response.json());\n  }\n\n  const EXAMPLE_GRAPHQL = `\n  {\n    purposes(first: 25, orderBy: createdAt, orderDirection: desc) {\n      id\n      purpose\n      createdAt\n      sender {\n        id\n      }\n    }\n    senders {\n      id\n      address\n      purposeCount\n    }\n  }\n  `\n  const EXAMPLE_GQL = gql(EXAMPLE_GRAPHQL)\n  const { loading, data } = useQuery(EXAMPLE_GQL,{pollInterval: 2500});\n\n  const purposeColumns = [\n    {\n      title: 'Purpose',\n      dataIndex: 'purpose',\n      key: 'purpose',\n    },\n    {\n      title: 'Sender',\n      key: 'id',\n      render: (record) => <Address\n                        value={record.sender.id}\n                        ensProvider={props.mainnetProvider}\n                        fontSize={16}\n                      />\n    },\n    {\n      title: 'createdAt',\n      key: 'createdAt',\n      dataIndex: 'createdAt',\n      render: d => (new Date(d * 1000)).toISOString()\n    },\n    ];\n\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n\n\n  const deployWarning = (\n    <div style={{marginTop:8,padding:8}}>{\"Warning: 🤔 Have you deployed your subgraph yet?\"}</div>\n  )\n\n  return (\n      <>\n          <div style={{ margin: \"auto\", marginTop: 32 }}>\n            You will find that parsing/tracking events with the <span style={highlight}>useEventListener</span> hook becomes a chore for every new project.\n          </div>\n          <div style={{ margin: \"auto\", marginTop: 32 }}>\n            Instead, you can use <a href=\"https://thegraph.com/docs/introduction\" target=\"_blank\" rel=\"noopener noreferrer\">The Graph</a> with 🏗 scaffold-eth (<a href=\"https://youtu.be/T5ylzOTkn-Q\" target=\"_blank\">learn more</a>):\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>🚮</span>\n            Clean up previous data:\n            <span style={highlight}>\n              rm -rf docker/graph-node/data/\n            </span>\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>📡</span>\n            Spin up a local graph node by running\n            <span style={highlight}>\n              yarn graph-run-node\n            </span>\n            <span style={{ marginLeft: 4}}> (requires <a href=\"https://www.docker.com/products/docker-desktop\" target=\"_blank\" rel=\"noopener noreferrer\"> Docker</a>) </span>\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>📝</span>\n            Create your <b>local subgraph</b> by running\n            <span style={highlight}>\n              yarn graph-create-local\n            </span>\n            (only required once!)\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>🚢</span>\n            Deploy your <b>local subgraph</b> by running\n            <span style={highlight}>\n              yarn graph-ship-local\n            </span>\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>🖍️</span>\n            Edit your <b>local subgraph</b> in\n            <span style={highlight}>\n              packages/subgraph/src\n            </span>\n             (learn more about subgraph definition <a href=\"https://thegraph.com/docs/define-a-subgraph\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>)\n          </div>\n\n          <div style={{ margin: 32 }}>\n            <span style={{ marginRight: 8 }}>🤩</span>\n            Deploy your <b>contracts and your subgraph</b> in one go by running\n            <span style={{ marginLeft: 4, backgroundColor: \"#f9f9f9\", padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}>\n              yarn deploy-and-graph\n            </span>\n          </div>\n\n          <div style={{width:780, margin: \"auto\", paddingBottom:64}}>\n\n            <div style={{margin:32, textAlign:'right'}}>\n              <Input onChange={(e)=>{setNewPurpose(e.target.value)}} />\n              <Button onClick={()=>{\n                console.log(\"newPurpose\",newPurpose)\n                /* look how you call setPurpose on your contract: */\n                props.tx( props.writeContracts.YourContract.setPurpose(newPurpose) )\n              }}>Set Purpose</Button>\n            </div>\n\n            {data?<Table dataSource={data.purposes} columns={purposeColumns} rowKey={\"id\"} />:<Typography>{(loading?\"Loading...\":deployWarning)}</Typography>}\n\n            <div style={{margin:32, height:400, border:\"1px solid #888888\", textAlign:'left'}}>\n              <GraphiQL fetcher={graphQLFetcher} docExplorerOpen={true} query={EXAMPLE_GRAPHQL}/>\n            </div>\n\n          </div>\n\n          <div style={{padding:64}}>\n          ...\n          </div>\n      </>\n  );\n}\n\nexport default Subgraph;\n","/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React, { useState } from \"react\";\nimport {\n  Form,\n  Button,\n  List,\n  Tooltip,\n  Divider,\n  Input,\n  Card,\n  Space,\n  DatePicker,\n  Slider,\n  Switch,\n  Progress,\n  Select,\n  Spin,\n} from \"antd\";\nimport { SyncOutlined } from \"@ant-design/icons\";\nimport { Address, Balance } from \"../components\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nimport moment from \"moment\";\n\nexport default function PlantTree({\n  purpose,\n  treeCount,\n  setPurposeEvents,\n  address,\n  mainnetProvider,\n  userProvider,\n  localProvider,\n  yourLocalBalance,\n  price,\n  tx,\n  readContracts,\n  writeContracts,\n}) {\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n\n  const [newFrequency, setNewFrequency] = useState(\"loading...\");\n  const [newPaymentSize, setNewPaymentSize] = useState(\"loading...\");\n  const [newLapseLimit, setNewLapseLimit] = useState(\"loading...\");\n  const [newDuration, setNewDuration] = useState(\"loading...\");\n  const [newMinWaterers, setNewMinWaterers] = useState(\"loading...\");\n  const [newBounty, setNewBounty] = useState(\"loading...\");\n  const [newStartDate1, setNewStartDate1] = useState(\"loading...\");\n\n  const dateFormat = \"MM/DD/YYYY\";\n  const { Option } = Select;\n\n  const customFormat = value => `custom format: ${value.format(dateFormat)}`;\n\n  const layout = {\n    labelCol: {\n      span: 8,\n    },\n    wrapperCol: {\n      span: 16,\n    },\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16,\n    },\n  };\n\n  function getDurationInSeconds(duration) {\n    switch (duration) {\n      case \"1_week\":\n        return \"604800\";\n      case \"2_week\":\n        return \"1209600\";\n      case \"1_month\":\n        return \"2629746\";\n      case \"2_month\":\n        return \"5259492\";\n      case \"4_month\":\n        return \"10518984\";\n      case \"6_month\":\n        return \"15778476\";\n      case \"1_year\":\n        return \"31556952\";\n      default:\n        return \"0\";\n    }\n  }\n\n  const onFinish = values => {\n    console.log(\"Success:\", values);\n    let plantTreeVal = {};\n    plantTreeVal.bounty = parseEther(values.bounty);\n    plantTreeVal.duration = getDurationInSeconds(values.duration);\n    plantTreeVal.fee_amount = parseEther(values.fee_amount);\n    plantTreeVal.frequency = values.frequency;\n    plantTreeVal.laple_limit = values.laple_limit;\n    plantTreeVal.minwaters = values.minwaters;\n    plantTreeVal.payment_size = parseEther(values.payment_size);\n    plantTreeVal.start_date = values.start_date.startOf(\"day\").unix();\n    console.log(plantTreeVal);\n    tx(\n      writeContracts.Arboretum.plant(\n        plantTreeVal.duration,\n        plantTreeVal.frequency,\n        plantTreeVal.payment_size,\n        plantTreeVal.laple_limit,\n        plantTreeVal.fee_amount,\n        plantTreeVal.start_date,\n        plantTreeVal.minwaters,\n        {\n          value: plantTreeVal.bounty,\n        },\n      ),\n    );\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  function disabledDate(current) {\n    return current && current < moment().endOf(\"day\");\n  }\n\n  function onChangeDuration(value) {\n    console.log(`selected ${value}`);\n  }\n  const [form] = Form.useForm();\n  return (\n    <div>\n      {/*\n        ⚙️ Here is an example UI that displays and sets the purpose in your smart contract:\n      */}\n        <div style={{padding: 8,paddingLeft:0, width: 800, margin: \"auto\", marginTop: 58 }} className={'bg-white'}>\n        <h2>Plant a Seed {treeCount}</h2>\n\n        <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\n          <Form.Item label=\"Duration\" name=\"duration\">\n            <Select\n              placeholder=\"Duration\"\n              style={{ width: 120 }}\n              allowClear\n              onChange={e => {\n                setNewDuration(e);\n              }}\n            >\n              <Option value=\"1_week\">1 Week</Option>\n              <Option value=\"2_week\">2 Week</Option>\n              <Option value=\"1_month\">1 Month</Option>\n              <Option value=\"2_month\">2 Month</Option>\n              <Option value=\"4_month\">4 Month</Option>\n              <Option value=\"6_month\">6 Month</Option>\n              <Option value=\"1_year\">1 Year</Option>\n            </Select>\n          </Form.Item>\n\n          <Form.Item label=\"Start Date\" name=\"start_date\">\n            <DatePicker format={dateFormat} disabledDate={disabledDate} />\n          </Form.Item>\n\n          <Form.Item label=\"Payment size\" name=\"payment_size\">\n            <Space direction=\"vertical\">\n              <Input\n                onChange={e => {\n                  setNewPaymentSize(e.target.value);\n                }}\n              />\n            </Space>\n          </Form.Item>\n\n          <Form.Item label=\"Lapse Limit\" name=\"laple_limit\">\n            <Space direction=\"vertical\">\n              <Input\n                onChange={e => {\n                  setNewLapseLimit(e.target.value);\n                }}\n              />\n            </Space>\n          </Form.Item>\n\n          <Form.Item label=\"Frequency\" name=\"frequency\">\n            <Space direction=\"vertical\">\n              <Input\n                onChange={e => {\n                  setNewFrequency(e.target.value);\n                }}\n              />\n            </Space>\n          </Form.Item>\n\n          <Form.Item label=\"Fee Amount\" name=\"fee_amount\">\n            <Space direction=\"vertical\">\n              <Input\n                onChange={e => {\n                  setNewFrequency(e.target.value);\n                }}\n              />\n            </Space>\n          </Form.Item>\n\n          <Form.Item label=\"Min Waters\" name=\"minwaters\">\n            <Space direction=\"vertical\">\n              <Input\n                onChange={e => {\n                  setNewMinWaterers(e.target.value);\n                }}\n              />\n            </Space>\n          </Form.Item>\n\n          <Form.Item label=\"Bounty\" name=\"bounty\">\n            <Space direction=\"vertical\">\n              <Input\n                onChange={e => {\n                  setNewBounty(e.target.value);\n                }}\n              />\n            </Space>\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React, { useState } from \"react\";\nimport { Button, List, Divider, Input, Card, DatePicker, Slider, Switch, Progress, Spin, Col, Row } from \"antd\";\nimport { SyncOutlined } from \"@ant-design/icons\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nimport { useContractReader, useEventListener } from \"../hooks/index\";\nimport tryToDisplay from \"../components/Contract/utils\";\nimport { TreeContent } from \"../components\";\n\nexport default function Trees({\n  treePlantedEvents,\n  address,\n  mainnetProvider,\n  userProvider,\n  localProvider,\n  yourLocalBalance,\n  price,\n  treeCount,\n  tx,\n  readContracts,\n  writeContracts,\n}) {\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n\n  // const tree1 = useContractReader(readContracts, \"Arboretum\", \"trees\", [0]);\n  // console.log(\"tree1 : \", tree1);\n  // if (tree1) {\n  //   console.log(\"mewo : \", tryToDisplay(tree1.bountyPool));\n  //   console.log(\"mewo : \", tryToDisplay(tree1.fee));\n  //   console.log(\"mewo : \", tryToDisplay(tree1.paymentFrequency));\n  //   console.log(\"Start Date : \", tryToDisplay(tree1.startDate), new Date(tryToDisplay(tree1.startDate) * 1000));\n  // }\n\n  return (\n    <div>\n      {/*\n        ⚙️ Here is an example UI that displays and sets the purpose in your smart contract:\n      */}\n      <div style={{  padding: 16, width: 1000, margin: \"auto\", marginTop: 64 }}>\n        {/* <h2>{treeCount} - Trees - </h2> */}\n      \n        <div className=\"site-card-wrapper\">\n          <Row gutter={16}>\n            {[...Array(treeCount)].map((i, e) => (\n              <Col span={8}>\n                <TreeContent\n                  address={address}\n                  key={e}\n                  id={e}\n                  localProvider={localProvider}\n                  userProvider={userProvider}\n                  mainnetProvide={mainnetProvider}\n                  treePlantedEvents={treePlantedEvents}\n                  tx={tx}\n                  useContractReader={useContractReader}\n                  writeContracts={writeContracts}\n                  readContracts={readContracts}\n                />\n              </Col>\n            ))}\n          </Row>\n        </div>\n        {/* {treePlantedEvents.map(item => <div key={Math.random() * 100}>{tryToDisplay(item[0])}</div>)} */}\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React from \"react\";\n\n\nexport default function About() {\n\n  return (\n    <div>\n      <p>About Us</p>\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React from \"react\";\n\n\n\nexport default function HowTo() {\n\n  return (\n    <div>\n      <p>How to Play!</p>\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\n\nimport React from \"react\";\n\n\nexport default function MyTree() {\n\n  return (\n    <div>\n      <p>My Tree</p>\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport \"./antd-saveus.css\";\nimport { JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport \"./App.css\";\nimport { Row, Col, Button, Menu } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress } from \"eth-hooks\";\nimport {\n  useExchangePrice,\n  useGasPrice,\n  useUserProvider,\n  useContractLoader,\n  useContractReader,\n  useEventListener,\n  useBalance,\n  useExternalContractLoader,\n} from \"./hooks\";\nimport { Header, Account } from \"./components\";\nimport { Transactor } from \"./helpers\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\n//import Hints from \"./Hints\";\nimport { Hints, ExampleUI, Subgraph, PlantTree, Trees, About, HowTo, MyTree } from \"./views\";\nimport tryToDisplay from \"./components/Contract/utils\";\nimport treeImg from './tree/EtherTree.png';\n\n\n/*\n    Welcome to 🏗 scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    📡 EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\nimport { INFURA_ID, DAI_ADDRESS, DAI_ABI } from \"./constants\";\n\n// 😬 Sorry for all the console logging 🤡\nconst DEBUG = true;\n\n// 🔭 block explorer URL\nconst blockExplorer = \"https://kovan.etherscan.io/\"; // for xdai: \"https://blockscout.com/poa/xdai/\"\n\n// 🛰 providers\nif (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\");\n//const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\nconst mainnetProvider = new JsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID);\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_ID)\nconsole.log(\"window.location.hostname\", window.location.hostname);\n// 🏠 Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = \"http://\" + window.location.hostname + \":8545\"; // for xdai: https://dai.poa.network\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new JsonRpcProvider(localProviderUrlFromEnv);\n\nfunction App(props) {\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* 💵 this hook will get the price of ETH from 🦄 Uniswap: */\n  const price = useExchangePrice(mainnetProvider); //1 for xdai\n\n  /* 🔥 this hook will get the price of Gas from ⛽️ EtherGasStation */\n  const gasPrice = useGasPrice(\"fast\"); //1000000000 for xdai\n\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userProvider, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n  if (DEBUG) console.log(\"💵 yourLocalBalance\", yourLocalBalance ? formatEther(yourLocalBalance) : \"...\");\n\n  // just plug in different 🛰 providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n  if (DEBUG) console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? formatEther(yourMainnetBalance) : \"...\");\n\n  // Load in your local 📝 contract and read a value from it:\n  const readContracts = useContractLoader(localProvider);\n  if (DEBUG) console.log(\"📝 readContracts\", readContracts);\n\n  // If you want to make 🔐 write transactions to your contracts, use the userProvider:\n  const writeContracts = useContractLoader(userProvider);\n  if (DEBUG) console.log(\"🔐 writeContracts\", writeContracts);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  //const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\n  //console.log(\"🥇DAI contract on mainnet:\",mainnetDAIContract)\n  //\n  // Then read your DAI balance like:\n  //const myMainnetBalance = useContractReader({DAI: mainnetDAIContract},\"DAI\", \"balanceOf\",[\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"])\n  //\n\n  // keep track of a variable from the contract in the local React state:\n  // const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\n  // console.log(\"🤗 purpose:\",purpose)\n\n  const treeCount = tryToDisplay(useContractReader(readContracts, \"Arboretum\", \"treeCount\"));\n  console.log(\"treeCount : \", treeCount);\n\n  //📟 Listen for broadcast events\n  // const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\n  // console.log(\"📟 SetPurpose events:\", setPurposeEvents);\n\n  // const treePlantedEvents = useEventListener(readContracts, \"Arboretum\", \"TreePlanted\", localProvider, 1);\n  // console.log(\"Tree planted events:\", treePlantedEvents);\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"🏷 Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n\n  let faucetHint = \"\";\n  const [faucetClicked, setFaucetClicked] = useState(false);\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId == 31337 &&\n    yourLocalBalance &&\n    formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ padding: 16 }}>\n        <Button\n          type={\"primary\"}\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: parseEther(\"0.01\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          💰 Grab funds from the faucet ⛽️\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {/* ✏️ Edit the header and change the title to your project name */}\n\n\n      <BrowserRouter>\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <img src={treeImg}  height={64} className={'inline-table h-full float-left pb-4 pl-8 pr-12'} />\n          <Menu.Item key=\"/\">\n            <Link\n              onClick={() => {\n                setRoute(\"/tree\");\n              }}\n              to=\"/tree\"\n            >\n              Forest\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/plant\">\n            <Link\n              onClick={() => {\n                setRoute(\"/plant\");\n              }}\n              to=\"/plant\"\n            >\n              Plant A Tree\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/my-tree\">\n            <Link\n              onClick={() => {\n                setRoute(\"/my-tree\");\n              }}\n              to=\"/my-tree\"\n            >\n              My Trees\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"/how-to\">\n            <Link\n              onClick={() => {\n                setRoute(\"/how-to\");\n              }}\n              to=\"/how-to\"\n            >\n              How To Play\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/about\">\n            <Link\n              onClick={() => {\n                setRoute(\"/about\");\n              }}\n              to=\"/about\"\n            >\n              About Us\n            </Link>\n          </Menu.Item>\n          {/* <Menu.Item key=\"/hints\">\n            <Link onClick={()=>{setRoute(\"/hints\")}} to=\"/hints\">Hints</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/exampleui\">\n            <Link onClick={()=>{setRoute(\"/exampleui\")}} to=\"/exampleui\">ExampleUI</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/subgraph\">\n            <Link onClick={()=>{setRoute(\"/subgraph\")}} to=\"/subgraph\">Subgraph</Link>\n          </Menu.Item> */}\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {/*\n                🎛 this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n            {/* <Contract\n              name=\"YourContract\"\n              signer={userProvider.getSigner()}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            /> */}\n            <Trees\n              address={address}\n              userProvider={userProvider}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={price}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              treeCount={treeCount}\n            />\n\n            {/* Uncomment to display and interact with an external contract (DAI on mainnet):\n            <Contract\n              name=\"DAI\"\n              customContract={mainnetDAIContract}\n              signer={userProvider.getSigner()}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n            */}\n          </Route>\n          <Route path=\"/hints\">\n            <Hints\n              address={address}\n              yourLocalBalance={yourLocalBalance}\n              mainnetProvider={mainnetProvider}\n              price={price}\n            />\n          </Route>\n          <Route path=\"/how-to\">\n            <HowTo />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/my-tree\">\n            <MyTree />\n          </Route>\n          <Route path=\"/tree\">\n            <Trees\n              address={address}\n              userProvider={userProvider}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={price}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              treeCount={treeCount}\n            />\n          </Route>\n          <Route path=\"/exampleui\">\n            <ExampleUI\n              address={address}\n              userProvider={userProvider}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={price}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              purpose={\"he\"}\n            />\n          </Route>\n          <Route path=\"/plant\">\n            <PlantTree\n              address={address}\n              userProvider={userProvider}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={price}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              purpose={\"he\"}\n              treeCount={treeCount}\n            />\n          </Route>\n          <Route path=\"/subgraph\">\n            <Subgraph\n              subgraphUri={props.subgraphUri}\n              tx={tx}\n              writeContracts={writeContracts}\n              mainnetProvider={mainnetProvider}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userProvider={userProvider}\n          mainnetProvider={mainnetProvider}\n          price={price}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n        {faucetHint}\n      </div>\n\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\n    </div>\n  );\n}\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nexport default App;\n","import { useState } from \"react\";\nimport { Token, WETH, Fetcher, Route } from \"@uniswap/sdk\";\nimport { usePoller } from \"eth-hooks\";\n\nexport default function useExchangePrice(mainnetProvider, pollTime) {\n  const [price, setPrice] = useState(0);\n\n  const pollPrice = () => {\n    async function getPrice() {\n      const DAI = new Token(\n        mainnetProvider.network ? mainnetProvider.network.chainId : 1,\n        \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n        18,\n      );\n      const pair = await Fetcher.fetchPairData(DAI, WETH[DAI.chainId], mainnetProvider);\n      const route = new Route([pair], WETH[DAI.chainId]);\n      setPrice(parseFloat(route.midPrice.toSignificant(6)));\n    }\n    getPrice();\n  };\n  usePoller(pollPrice, pollTime || 9777);\n\n  return price;\n}\n","import { useState } from \"react\";\nimport { usePoller } from \"eth-hooks\";\nimport axios from \"axios\";\n\nexport default function useGasPrice(speed) {\n  const [gasPrice, setGasPrice] = useState();\n  const loadGasPrice = async () => {\n    axios\n      .get(\"https://ethgasstation.info/json/ethgasAPI.json\")\n      .then(response => {\n        const newGasPrice = response.data[speed || \"fast\"] * 100000000;\n        if (newGasPrice !== gasPrice) {\n          setGasPrice(newGasPrice);\n        }\n      })\n      .catch(error => console.log(error));\n  };\n  usePoller(loadGasPrice, 39999);\n  return gasPrice;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nlet subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\"\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App subgraphUri={subgraphUri}/>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n","module.exports = __webpack_public_path__ + \"static/media/EtherTree.458ca6b7.png\";","var map = {\n\t\"./Arboretum.abi.js\": 1158,\n\t\"./YourContract.abi.js\": 1159\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 628;","var map = {\n\t\"./Arboretum.bytecode.js\": 1160,\n\t\"./YourContract.bytecode.js\": 1161\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 629;"],"sourceRoot":""}